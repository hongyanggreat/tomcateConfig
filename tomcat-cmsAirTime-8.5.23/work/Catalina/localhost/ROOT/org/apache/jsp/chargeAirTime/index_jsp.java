/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.23
 * Generated at: 2018-02-08 06:41:38 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.chargeAirTime;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.htc.airtime.dao.AccountDAO;
import com.htc.airtime.dao.ChargeAirTimeDAO;
import java.util.regex.Pattern;
import com.htc.airtime.components.Tool;
import com.htc.airtime.components.MyDate;
import java.util.ArrayList;
import com.htc.airtime.dao.AccountDAO;
import com.htc.airtime.components.Tool;
import com.htc.airtime.model.Account;
import com.htc.airtime.components.Helper;
import com.htc.airtime.dao.AccountDAO;
import com.htc.airtime.model.Account;
import com.htc.airtime.components.Tool;
import com.htc.airtime.dao.AccountDAO;
import com.htc.airtime.dao.UserServicesDAO;
import com.htc.airtime.model.UserServices;
import java.util.ArrayList;
import com.htc.airtime.model.Account;
import com.htc.airtime.dao.AccountDAO;
import com.htc.airtime.model.Account;
import com.htc.airtime.dao.AccountDAO;
import com.htc.airtime.model.UserServices;
import com.htc.airtime.dao.UserServicesDAO;
import com.htc.airtime.components.Tool;
import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.Iterator;
import java.util.Map;
import com.htc.airtime.components.Tool;
import com.htc.airtime.components.Helper;
import com.htc.airtime.model.ChargeAirTime;
import com.htc.airtime.dao.ChargeAirTimeDAO;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(13);
    _jspx_dependants.put("/chargeAirTime/../includes/footerJs.jsp", Long.valueOf(1513046144000L));
    _jspx_dependants.put("/chargeAirTime/../includes/airTime/button.jsp", Long.valueOf(1513046149000L));
    _jspx_dependants.put("/chargeAirTime/../includes/topMenu.jsp", Long.valueOf(1513046144000L));
    _jspx_dependants.put("/chargeAirTime/../includes/airTime/formSearch.jsp", Long.valueOf(1513046149000L));
    _jspx_dependants.put("/chargeAirTime/../includes/../includes/checkLogin.jsp", Long.valueOf(1513046144000L));
    _jspx_dependants.put("/chargeAirTime/../includes/breadcrumb.jsp", Long.valueOf(1513046144000L));
    _jspx_dependants.put("/chargeAirTime/../includes/mainMenu.jsp", Long.valueOf(1513046144000L));
    _jspx_dependants.put("/chargeAirTime/table.jsp", Long.valueOf(1513046142000L));
    _jspx_dependants.put("/chargeAirTime/../includes/topFooter.jsp", Long.valueOf(1513046144000L));
    _jspx_dependants.put("/chargeAirTime/../includes/head.jsp", Long.valueOf(1513046144000L));
    _jspx_dependants.put("/chargeAirTime/../includes/paginator.jsp", Long.valueOf(1513046144000L));
    _jspx_dependants.put("/chargeAirTime/common.jsp", Long.valueOf(1513046142000L));
    _jspx_dependants.put("/chargeAirTime/../includes/airTime/infoSelect.jsp", Long.valueOf(1513046150000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.htc.airtime.dao.ChargeAirTimeDAO");
    _jspx_imports_classes.add("java.util.Iterator");
    _jspx_imports_classes.add("com.htc.airtime.model.ChargeAirTime");
    _jspx_imports_classes.add("com.htc.airtime.model.Account");
    _jspx_imports_classes.add("com.htc.airtime.dao.AccountDAO");
    _jspx_imports_classes.add("java.util.ArrayList");
    _jspx_imports_classes.add("java.util.LinkedHashMap");
    _jspx_imports_classes.add("com.htc.airtime.components.Tool");
    _jspx_imports_classes.add("com.htc.airtime.components.Helper");
    _jspx_imports_classes.add("com.htc.airtime.model.UserServices");
    _jspx_imports_classes.add("java.util.Map");
    _jspx_imports_classes.add("com.htc.airtime.dao.UserServicesDAO");
    _jspx_imports_classes.add("com.htc.airtime.components.MyDate");
    _jspx_imports_classes.add("java.util.regex.Pattern");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write('\n');

    String baseUrl = request.getContextPath();
    if (Tool.checkNull(session.getAttribute("acc"))) {
        try {
            response.sendRedirect("/login.jsp");
            return;
        } catch (Exception e) {
            System.out.println("CO LOI NHA");
        }
    }
    String nameUser = "";
    String cpCodeUser = "";
    String checkTypeUser = "";
    int idUser = 0;
    Account acc = null;
    if (!Tool.checkNull(session.getAttribute("acc"))) {
        acc = (Account) session.getAttribute("acc");
        idUser = acc.getAccId();
        nameUser = acc.getUserName();
        cpCodeUser = acc.getCpCode();
        checkTypeUser = AccountDAO.TYPE.getType(acc.getUserType()).toString();
    }

      out.write(' ');
      out.write("<!DOCTYPE html><html lang=\"en\">\n");
      out.write("    <head>\n");
      out.write("        <title>CMS AirTime [sv1]</title>\n");
      out.write("        <meta charset=\"UTF-8\" />\n");
      out.write("        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n");
      out.write("        <link rel=\"stylesheet\" href=\"");
      out.print( baseUrl);
      out.write("/resource/css/bootstrap.min.css\" />\n");
      out.write("        <link rel=\"stylesheet\" href=\"");
      out.print( baseUrl);
      out.write("/resource/css/bootstrap-responsive.min.css\" />\n");
      out.write("        <link rel=\"stylesheet\" href=\"");
      out.print( baseUrl);
      out.write("/resource/css/colorpicker.css\" />\n");
      out.write("        <link rel=\"stylesheet\" href=\"");
      out.print( baseUrl);
      out.write("/resource/css/datepicker.css\" />\n");
      out.write("        <link rel=\"stylesheet\" href=\"");
      out.print( baseUrl);
      out.write("/resource/css/uniform.css\" />\n");
      out.write("        <link rel=\"stylesheet\" href=\"");
      out.print( baseUrl);
      out.write("/resource/css/select2.css\" />\n");
      out.write("        <link rel=\"stylesheet\" href=\"");
      out.print( baseUrl);
      out.write("/resource/css/maruti-style.css?v=1.0\" />\n");
      out.write("        <link rel=\"stylesheet\" href=\"");
      out.print( baseUrl);
      out.write("/resource/css/maruti-media.css\" class=\"skin-color\" />\n");
      out.write("        <script src =\"");
      out.print( baseUrl);
      out.write("/resource/js/jquery.min.js\"></script> \n");
      out.write("        <script src =\"");
      out.print( baseUrl);
      out.write("/resource/js/select2.min.js\"></script>\n");
      out.write("        <style>\n");
      out.write("            .checker{\n");
      out.write("                vertical-align: initial;\n");
      out.write("            }\n");
      out.write("        </style>\n");
      out.write("    </head>\n");
      out.write("    <body>\n");
      out.write("        <div id=\"header\"><!--Header-part-->\n");
      out.write("            <h1><a href=\"");
      out.print( baseUrl);
      out.write("\">CMS AirTime</a></h1>\n");
      out.write("        </div>");
      out.write('\r');
      out.write('\n');
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");

    String moduleSourse = "chargeAirTime";
    String moduleName = "Charge thành công";

      out.write("\r\n");
      out.write("<!--close-Header-part--> \r\n");
      out.write("\r\n");
      out.write("<!--top-Header-menu-->\r\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!--top-Header-menu-->\n");
      out.write("<div id=\"user-nav\" class=\"navbar navbar-inverse\">\n");
      out.write("    <ul class=\"nav\">\n");
      out.write("       \n");
      out.write("        <li class=\" dropdown\" id=\"menu-messages\"><a href=\"#\" data-toggle=\"dropdown\" data-target=\"#menu-messages\" class=\"dropdown-toggle\"><i class=\"icon icon-user\"></i> <span class=\"text\">");
      out.print( nameUser);
      out.write(" ---\n");
      out.write("                    ");
      out.print( checkTypeUser);
      out.write("</span> <span class=\"label label-important\">5</span> <b class=\"caret\"></b></a>\n");
      out.write("            <ul class=\"dropdown-menu\">\n");
      out.write("                <li><a class=\"sAdd\" title=\"\" href=\"#\">Xem thông tin user</a></li>\n");
      out.write("            </ul>\n");
      out.write("        </li>\n");
      out.write("        <li class=\"\"><a title=\"\" href=\"");
      out.print( baseUrl);
      out.write("/logout\" onclick=\"return confirm('Bạn có chắc muốn thoát?')\" ><i class=\"icon icon-share-alt\"></i> <span class=\"text\">Logout</span></a></li>\n");
      out.write("    </ul>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("\r\n");
      out.write("<!--close-top-Header-menu--> \r\n");
      out.write("<!--left-menu-stats-sidebar-->\r\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");

    AccountDAO accountPermission = new AccountDAO();

    boolean checkAccounts = true;
    boolean checkUserPermission = true;
    boolean checkModules = true;
    boolean checkServices = true;
    boolean checkAirtimeManager = true;
    boolean checkOtpAirTime = true;
    boolean checkChargeAirTime = true;
    boolean checkErrorOtpAirTime = true;
    boolean checkErrorChargeAirTime = true;

//    checkAccounts = accountPermission.checkList(request, session, "accounts");
//    checkUserPermission = accountPermission.checkList(request, session, "userPermission");
//    checkModules = accountPermission.checkList(request, session, "modules");
//    checkServices = accountPermission.checkList(request, session, "services");
//    checkAirtimeManager = accountPermission.checkList(request, session, "airtimeManager");
//    checkOtpAirTime = accountPermission.checkList(request, session, "otpAirTime");
//    checkChargeAirTime = accountPermission.checkList(request, session, "chargeAirTime");
//    checkErrorOtpAirTime = accountPermission.checkList(request, session, "errorOtpAirTime");
//    checkErrorChargeAirTime = accountPermission.checkList(request, session, "errorChargeAirTime");

      out.write("\n");
      out.write("<div id=\"sidebar\">\n");
      out.write("    <a href=\"#\" class=\"visible-phone\"><i class=\"icon icon-th-list\"></i> Common Elements</a><ul>\n");
      out.write("        <li class=\"active\"><a href=\"/\"><i class=\"icon icon-home\"></i> <span>Trang chủ</span></a> </li>\n");
      out.write("        ");
 if (checkTypeUser.equals("ADMIN") || checkTypeUser.equals("AGENCY_MANAGER") ) {
      out.write("\n");
      out.write("        <li class=\"submenu\"> <a href=\"#\"><i class=\"icon icon-th-list\"></i> <span>Quản lý</span></a>\n");
      out.write("            <ul>\n");
      out.write("               ");
 if (checkTypeUser.equals("ADMIN") ) {
      out.write("\n");
      out.write("                <li class=\"\"><a href=\"");
      out.print( baseUrl);
      out.write("/accounts\"><i class=\"icon icon-th-list\"></i> <span>Tài khoản</span></a> </li>\n");
      out.write("               ");
}
      out.write("\n");
      out.write("               ");
 if (checkTypeUser.equals("AGENCY_MANAGER") ) {
      out.write("\n");
      out.write("                <li class=\"\"><a href=\"");
      out.print( baseUrl);
      out.write("/accounts\"><i class=\"icon icon-th-list\"></i> <span>Tài khoản</span></a> </li>\n");
      out.write("               ");
}
      out.write("\n");
      out.write("               ");
 if (checkTypeUser.equals("ADMIN") ) {
      out.write("\n");
      out.write("                <li class=\"\"><a href=\"");
      out.print( baseUrl);
      out.write("/modules\"><i class=\"icon icon-th-list\"></i> <span>Module</span></a> </li>\n");
      out.write("                <li class=\"\"><a href=\"");
      out.print( baseUrl);
      out.write("/services\"><i class=\"icon icon-th-list\"></i> <span>Dịch vụ</span></a> </li>\n");
      out.write("                <li class=\"\"><a href=\"");
      out.print( baseUrl);
      out.write("/airtimeManager\"><i class=\"icon icon-th-list\"></i> <span>Đăng ký dịch vụ airtime</span></a> </li>\n");
      out.write("                <li class=\"\"><a href=\"");
      out.print( baseUrl);
      out.write("/userPermission\"><i class=\"icon icon-th-list\"></i> <span>Phân quyền tài khoản</span></a> </li>\n");
      out.write("               ");
}
      out.write("\n");
      out.write("               ");
 if (checkTypeUser.equals("AGENCY_MANAGER") ) {
      out.write("\n");
      out.write("                <!--//DANH CHO DAI LY-->\n");
      out.write("                <li class=\"\"><a href=\"");
      out.print( baseUrl);
      out.write("/userPermissionChild\"><i class=\"icon icon-th-list\"></i> <span>Phân quyền tài khoản</span></a> </li>\n");
      out.write("               ");
}
      out.write("\n");
      out.write("            </ul>\n");
      out.write("        </li>\n");
      out.write("        ");
}
      out.write("\n");
      out.write("\n");
      out.write("        <li class=\"\"> <a href=\"");
      out.print( baseUrl);
      out.write("/reqAll\"><i class=\"icon icon-th-list\"></i> <span>Lịch sử Charging</span> </a>\n");
      out.write("            <ul>\n");
      out.write("                <li><a href=\"");
      out.print( baseUrl);
      out.write("/reqOtp\">OTP</a></li>\n");
      out.write("                <li><a href=\"");
      out.print( baseUrl);
      out.write("/reqCharging\">Charging</a></li>\n");
      out.write("            </ul>\n");
      out.write("        </li>\n");
      out.write("        <li class=\"submenu\"> <a href=\"#\"><i class=\"icon icon-th-list\"></i> <span>Thống kê Charging</span> </a>\n");
      out.write("            <ul>\n");
      out.write("                <li><a href=\"");
      out.print( baseUrl);
      out.write("/reqCharging/statistic.jsp\">Charging</a></li>\n");
      out.write("            </ul>\n");
      out.write("        </li>\n");
      out.write("        <li class=\"\"> <a href=\"");
      out.print( baseUrl);
      out.write("/charging\"><i class=\"icon icon-th-list\"></i> <span>Charging</span> </a>\n");
      out.write("        </li>\n");
      out.write("    </ul>\n");
      out.write("</div>");
      out.write("\r\n");
      out.write("<!--close-left-menu-stats-sidebar-->\r\n");
      out.write("\r\n");
      out.write("<div id=\"content\">\r\n");
      out.write("    <div id=\"content-header\">\r\n");
      out.write("        ");
      out.write("\n");
      out.write(" \n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
  //          
            AccountDAO accSearch = new AccountDAO();
            ArrayList<Account> dtsAccSearch = null;
            ArrayList<Account> arrAcc = null;

            UserServicesDAO userServicecSearch = new UserServicesDAO();
            ArrayList<UserServices> dtsCodeGameSearch = null;
            switch (checkTypeUser) {
                case "USER":
                    break;
                case "ADMIN":
                    dtsAccSearch = accSearch.getListByField("STATUS", 1);
                    dtsCodeGameSearch = userServicecSearch.getListByField("STATUS", 1);
                    break;
                case "AGENCY":
                    arrAcc = dtsAccSearch = accSearch.getListAgency(idUser, 1);
                    dtsCodeGameSearch = userServicecSearch.getListByField(dtsAccSearch);
                    break;
                case "AGENCY_MANAGER":
                    arrAcc = dtsAccSearch = accSearch.getListAgency(idUser, 1);
                    dtsCodeGameSearch = userServicecSearch.getListByField(dtsAccSearch);
                    break;
                default:
//            dtsAccSearch = accSearch.getListByField("STATUS", 1);
//            dtsSearch = userServicecSearch.getListByField("STATUS", 1);
                    break;
            }
        
      out.write("\r\n");
      out.write("        ");
  //          
            AccountDAO account = new AccountDAO();
            boolean checkPermission = account.checkList(request, session);
            Helper.cPermission(response, checkPermission);
            String actionName = "Tìm kiếm";

            request.setCharacterEncoding("UTF-8");
            String price = "0";
            String cpCode = "";
            String cpName = "";
            String cpGame = "";
            String msisdn = "";
            String formDate = MyDate.createDate("dd/MM/yyyy");
            String toDate = MyDate.createDate("dd/MM/yyyy");
            int limit = 100;
            int offset = 0;
            int pages = 1;

            if (!Tool.checkNull(request.getParameter("price"))) {
                price = request.getParameter("price");
            }
            if (!Tool.checkNull(request.getParameter("cpCode"))) {
                cpCode = request.getParameter("cpCode");
            }
            if (!Tool.checkNull(request.getParameter("cpName"))) {
                cpName = request.getParameter("cpName");
            }
            if (!Tool.checkNull(request.getParameter("cpGame"))) {
                cpGame = request.getParameter("cpGame");
            }
            if (!Tool.checkNull(request.getParameter("msisdn"))) {
                msisdn = request.getParameter("msisdn");
            }
            if (!Tool.checkNull(request.getParameter("formDate"))) {
                formDate = request.getParameter("formDate");
            }
            if (!Tool.checkNull(request.getParameter("toDate"))) {
                toDate = request.getParameter("toDate");
            }
            if (!Tool.checkNull(request.getParameter("numberLimit"))) {
                limit = Integer.parseInt(request.getParameter("numberLimit"));
            }
            if (!Tool.checkNull(request.getParameter("pages"))) {
                String possibleNumber = request.getParameter("pages");
                boolean isNumber = Pattern.matches("[0-9]+", possibleNumber);
                if (isNumber && (Integer.parseInt(possibleNumber) > 0)) {
                    pages = Integer.parseInt(possibleNumber);
                }
            }
            offset = (pages - 1) * limit;
//                System.out.println(resultCode);
//                System.out.println(cpCode);
//                System.out.println(formDate);
//                System.out.println(toDate);
//                System.out.println(limit);
            ChargeAirTimeDAO chargeAirTime = new ChargeAirTimeDAO();

            int totalItem = chargeAirTime.countAllSearch(price, cpCode, cpName, cpGame, msisdn, formDate, toDate,arrAcc);
            ArrayList<ChargeAirTime> dts = chargeAirTime.getListSearch(price, cpCode, cpName, cpGame, msisdn, formDate, toDate, limit, offset,arrAcc);

            int totalPage = (int) Math.ceil((double) totalItem / limit);

            String actionPage = baseUrl + "/" + moduleSourse + "/index.jsp?pages=";
            String paramPage = "&price=" + price
                    + "&cpCode=" + cpCode
                    + "&cpName=" + cpName
                    + "&cpGame=" + cpGame
                    + "&msisdn=" + msisdn
                    + "&formDate=" + formDate
                    + "&toDate=" + toDate
                    + "&numberLimit=" + limit;

            String action = baseUrl + "/" + moduleSourse;
            String statistic = baseUrl + "/" + moduleSourse + "/statistic.jsp";
            String actionExp = baseUrl + "/" + moduleSourse + "/export/data.jsp?page=" + pages + paramPage;

        
      out.write(" \r\n");
      out.write("        ");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<div id=\"breadcrumb\"> \n");
      out.write("    <a href=\"/\" title=\"Go to Home\" class=\"tip-bottom\"><i class=\"icon-home\"></i> Trang chủ</a> \n");
      out.write("    <!--nameModule ,nameAction được khai báo bên view action-->\n");
      out.write("    \n");
      out.write("    <a href=\"");
      out.print( baseUrl +"/"+ moduleSourse );
      out.write("\" class=\"tip-bottom\">");
 if(moduleName != ""){out.println(moduleName);
    } 
      out.write("</a> \n");
      out.write("    <a href=\"#\" class=\"current\">");
 if(actionName != ""){out.println(actionName);
    } 
      out.write("</a> \n");
      out.write("</div>\n");
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"container-fluid\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        <div class=\"row-fluid\">\r\n");
      out.write("            <div class=\"span12\">\r\n");
      out.write("                <div class=\"widget-box collapsible\">\r\n");
      out.write("\r\n");
      out.write("                    <div class=\"widget-title\">\r\n");
      out.write("                        ");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<span class=\"icon\"><a class=\"\" href=\"");
      out.print( baseUrl);
      out.write('/');
      out.print( moduleSourse);
      out.write("\" title=\"Danh sách\" style=\"padding:0 2px;\">\n");
      out.write("        <img  width=\"20\" src=\"");
      out.print( baseUrl);
      out.write("/resource/images/icon/home.png\" alt=\"\"> Danh sách</a>\n");
      out.write("</span>\n");
      out.write("<span class=\"icon\"><a class=\"\" href=\"");
      out.print( statistic);
      out.write("\" title=\"Thống kê\" style=\"padding:0 2px;\">\n");
      out.write("        <img  width=\"20\" src=\"");
      out.print( baseUrl);
      out.write("/resource/images/icon/statistic.png\" alt=\"\"> Thống kê</a>\n");
      out.write("</span>\n");
      out.write("\r\n");
      out.write("                        <!--// Nut chuc nang-->\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"\" id=\"collapseOne\">\r\n");
      out.write("                        <!-- //FORM SEARCH -->\r\n");
      out.write("                        ");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<form action=\"");
      out.print( action);
      out.write("\" name=\"myform\" method=\"get\" class=\"form-horizontal\">\n");
      out.write("    <div class=\"widget-box search\">\n");
      out.write("        <div class=\"widget-content \">\n");
      out.write("            <table class=\"table table-bordered table-striped\">\n");
      out.write("                <tbody>\n");
      out.write("                    <tr>\n");
      out.write("                        <td style=\"text-align: center;\">\n");
      out.write("                            ");
 
//                                String formatDate = "mm/dd/yyyy";
                                String formatDate = "dd/mm/yyyy";
                            
      out.write("\n");
      out.write("                            Số điện thoại:<input type=\"text\" name=\"msisdn\"  value=\"");
      out.print( msisdn);
      out.write("\" class=\"span2\" placeholder=\"Nhập Số điện thoại\" />\n");
      out.write("                            Từ ngày: <input type=\"text\" name=\"formDate\" value=\"");
      out.print( formDate);
      out.write("\" data-date-format=\"");
      out.print( formatDate);
      out.write("\" value=\"\" class=\"datepicker span2\" placeholder=\"Nhập ngày bắt đầu\">\n");
      out.write("                            Đến ngày: <input type=\"text\" name=\"toDate\" value=\"");
      out.print( toDate);
      out.write("\" data-date-format=\"");
      out.print( formatDate);
      out.write("\" value=\"\" class=\"datepicker span2\" placeholder=\"Nhập ngày kết thúc\">\n");
      out.write("                        </td>\n");
      out.write("\n");
      out.write("                    </tr>\n");
      out.write("                    <tr>\n");
      out.write("                        <td style=\"text-align: center;\">\n");
      out.write("                            <select class=\"span2 offset1 \" name=\"price\" >\n");
      out.write("                                ");

                                    LinkedHashMap<String, String> arrayPrice = new LinkedHashMap<String, String>();
                                    String[] prices = {"5", "15", "30", "50", "100"};
                                    arrayPrice.put("0", "Chọn giá tiền");
                                    for (int i = 0; i < prices.length; i++) {
                                        arrayPrice.put(prices[i], "Mệnh giá " + prices[i] + ".000 đ");
                                        //                        System.out.println("GIA TRI "+i+" Là :"+prices[i]);
                                    }
                                    System.out.println("prices arr Lenght : " + prices.length);
                                    //                        arrayResultCode.forEach((k,v) -> System.out.println("key: "+k+" =>  value:"+v));

                                    Iterator it2 = arrayPrice.entrySet().iterator();
                                    String selectedPrice = "";
                                    while (it2.hasNext()) {
                                        Map.Entry pair = (Map.Entry) it2.next();
                                        //                            System.out.println(pair.getKey() + " = " + pair.getValue());
                                        selectedPrice = "";
                                        if (pair.getKey().equals(price)) {
                                            selectedPrice = "selected";
                                        }
                                        out.println("<option value='" + pair.getKey() + "' " + selectedPrice + ">" + pair.getValue() + "</option>");
                                        it2.remove(); // avoids a ConcurrentModificationException
                                    }
                                
      out.write("\n");
      out.write("                            </select>\n");
      out.write("\n");
      out.write("                            <select class=\"span2\" name=\"cpCode\">\n");
      out.write("                                <option value=\"all\" selected>Chọn mã tài khoản</option>\n");
      out.write("                                ");

                                    if (dtsAccSearch != null) {
                                        for (Account dt : dtsAccSearch) {
                                            String selectedCpCode = "";
                                            if (dt.getCpCode().equals(cpCode)) {
                                                selectedCpCode = "selected";
                                            }
                                
      out.write("\n");
      out.write("                                <option value=\"");
      out.print( dt.getCpCode());
      out.write('"');
      out.write(' ');
      out.print( selectedCpCode);
      out.write('>');
      out.print( dt.getCpCode());
      out.write("</option>\n");
      out.write("                                ");
 }
      out.write("   \n");
      out.write("                                ");
 }
      out.write("   \n");
      out.write("                            </select>\n");
      out.write("                            <select class=\"span2 \" name=\"cpName\" >\n");
      out.write("                                <option value=\"all\">Chọn Tài khoản</option>\n");
      out.write("                                ");

                                    if (dtsAccSearch != null) {
                                        for (Account dt : dtsAccSearch) {
                                            String selectedCpName = "";
                                            if (dt.getUserName().equals(cpName)) {
                                                selectedCpName = "selected";
                                            }
                                
      out.write("\n");
      out.write("                                <option value=\"");
      out.print( dt.getUserName());
      out.write('"');
      out.write(' ');
      out.print( selectedCpName);
      out.write('>');
      out.print( dt.getUserName());
      out.write("</option>\n");
      out.write("                                ");
 }
      out.write("   \n");
      out.write("                                ");
 }
      out.write("   \n");
      out.write("                            </select>\n");
      out.write("\n");
      out.write("                            <select class=\"span2 \" name=\"cpGame\" >\n");
      out.write("                                <option value=\"all\">Chọn Mã game</option>\n");
      out.write("                                ");

                                    if (dtsCodeGameSearch != null) {
                                        for (UserServices dt : dtsCodeGameSearch) {
                                            String selectedCpGame = "";
                                            if (dt.getCodeGame().equals(cpGame)) {
                                                selectedCpGame = "selected";
                                            }
                                
      out.write("\n");
      out.write("                                <option value=\"");
      out.print( dt.getCodeGame());
      out.write('"');
      out.write(' ');
      out.print( selectedCpGame);
      out.write('>');
      out.print( dt.getCodeGame());
      out.write("</option>\n");
      out.write("                                ");
 }
      out.write("   \n");
      out.write("                                ");
 }
      out.write("   \n");
      out.write("                            </select>\n");
      out.write("                            <select class=\"span2 \" name=\"numberLimit\" >\n");
      out.write("                                ");

                                    for (int i = 0; i <= 1000; i += 10) {
                                        String selectedLimit = "";
                                        if (i > 0) {
                                            if (i == limit) {
                                                selectedLimit = "selected";
                                            }

                                
      out.write("  \n");
      out.write("                                <option value=\"");
      out.print( i);
      out.write('"');
      out.write(' ');
      out.print( selectedLimit);
      out.write('>');
      out.print( i);
      out.write(" bản ghi</option>\n");
      out.write("                                ");

                                        }
                                    }
                                
      out.write("\n");
      out.write("                            </select>\n");
      out.write("                        </td>\n");
      out.write("                    </tr>\n");
      out.write("                    <tr>\n");
      out.write("                        <th>\n");
      out.write("                            <button type=\"submit\" name=\"searchResponseAirTime\" class=\"btn btn-success\">Thống kê / Tìm kiếm</button>\n");
      out.write("                            <button type=\"button\" name=\"searchResponseAirTime\" class=\"btn\" style=\"float:none\">\n");
      out.write("                                <span class=\"icon\"><a class=\"\" href=\"");
      out.print( actionExp);
      out.write("\" target=\"_blank\" title=\"Xuất File excel\" style=\"padding:0 2px;\">\n");
      out.write("                                        <img  width=\"20\" src=\"");
      out.print( baseUrl);
      out.write("/resource/images/icon/download.png\" alt=\"\"> Download</a>\n");
      out.write("                                </span>\n");
      out.write("                            </button>\n");
      out.write("                        </th>\n");
      out.write("                    </tr>\n");
      out.write("                </tbody>\n");
      out.write("            </table>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("</form>");
      out.write("\r\n");
      out.write("                        <!-- //FORM SEARCH -->\r\n");
      out.write("                    </div>\r\n");
      out.write("\r\n");
      out.write("                    <div class=\"collapse in\" id=\"collapseTwo\">\r\n");
      out.write("                        <div class=\"widget-content\" style=\"padding: 0px\" >\r\n");
      out.write("                            <div class=\"widget-box\" style=\"border:0px;margin:0px\">\r\n");
      out.write("                                <div class=\"widget-title\">\r\n");
      out.write("\r\n");
      out.write("                                    <!-- //Hien thi cac nut chuc nang -->\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <div class=\"widget-content nopadding\" style=\"overflow: scroll;\">\r\n");
      out.write("                                    ");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<table class=\"table table-bordered data-table\">\n");
      out.write("    <thead>\n");
      out.write("        <tr>\n");
      out.write("            <th>Stt</th>\n");
      out.write("            <th>ID</th>\n");
      out.write("            <th>Thời gian</th>\n");
      out.write("            <th>Số điện thoại</th>\n");
      out.write("            <th>Số tiền</th>\n");
      out.write("            <th>Mã OTP</th>\n");
      out.write("            <th>Trạng thái</th>\n");
      out.write("            <th>Mã CP</th>\n");
      out.write("            <th>Tên CP</th>\n");
      out.write("            <th>Mã Game</th>\n");
      out.write("        </tr>\n");
      out.write("    </thead>\n");
      out.write("    <tbody>\n");
      out.write("        ");

            int i = 0;
            for (ChargeAirTime dt : dts) {
                i++;
                int idService = dt.getID();

                String status = "Thành công";
                String rsMps = dt.getRS_MPS();
                if (!rsMps.equals("0")) {
                    status = "Thất bại";
                }
                int priceRequest = 0;
                String priceNumber = "null";
                if (!Tool.checkNull(dt.getPRICE())) {
                    priceRequest = dt.getPRICE();
                    priceNumber = Helper.formatNumber(priceRequest)+ " VNĐ";
                    
                }
        
      out.write("\n");
      out.write("        <tr class=\"gradeX\">\n");
      out.write("            <td style=\"width:30px;text-align:center\">");
      out.print( i);
      out.write("</td>\n");
      out.write("            <td style=\"width:30px;text-align:center\">");
      out.print( dt.getID());
      out.write("</td>\n");
      out.write("            <td style=\"width:30px;text-align:center\">");
      out.print( dt.getREQUEST_TIME());
      out.write("</td>\n");
      out.write("            <td style=\"width:30px;text-align:center\">");
      out.print( dt.getMSISDN());
      out.write("</td>\n");
      out.write("            <td style=\"width:30px;text-align:center\">");
      out.print( priceNumber);
      out.write("</td>\n");
      out.write("            <td style=\"width:30px;text-align:center\" title=\"Mã KH nhập vào ");
      out.print( dt.getOTP());
      out.write('"');
      out.write('>');
      out.print( dt.getOTP());
      out.write("</td>\n");
      out.write("            <td style=\"width:30px;text-align:center\">");
      out.print( status);
      out.write("</td>\n");
      out.write("            <td style=\"width:30px;text-align:center\">");
      out.print( dt.getCP_CODE());
      out.write("</td>\n");
      out.write("            <td style=\"width:30px;text-align:center\">");
      out.print( dt.getUSER_NAME());
      out.write("</td>\n");
      out.write("            <td style=\"width:30px;text-align:center\">");
      out.print( dt.getGAME_CODE());
      out.write("</td>\n");
      out.write("        </tr>\n");
      out.write("        ");
 }
      out.write("\n");
      out.write("    </tbody>\n");
      out.write("</table>");
      out.write("\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"pagination alternate\" style=\"text-align: center\">\r\n");
      out.write("                                <ul>\r\n");
      out.write("                                    ");
      out.write('\n');
      out.write('\n');
      out.write('\n');

    System.out.println("Tong so trang = :" + totalPage);
    System.out.println("Trang hien tai = :" + pages);
    System.out.println("Action = :" + actionPage);
    System.out.println("ParamPage = :" + paramPage);
    
    if(totalPage != 1 && totalPage>= pages ){
        String disabledPrev = "";
        String disabledNext = "";
        int numberPagePrev = 0;
        int numberPageNext = 0;
        
        if(totalPage>= pages){
            if(pages == 1){
                    disabledPrev = "disabled";
            }else{
                if(pages > 1){
                  numberPagePrev = pages - 1;
                }else{
                  disabledPrev = "disabled"; 
                }
            }
            if(pages == totalPage){
                disabledNext = "disabled";
            }else{
                numberPageNext = pages + 1;
            }
        }
       
      out.write("\n");
      out.write("        ");

            //Sử lý cho trang đầu tiên
            String linkFirst = "";
            String disabledFirst = "disabled";
            if(pages != 1){
                disabledFirst = "";
                linkFirst = "href='"+actionPage +"1"+paramPage+"'";
            }
        
      out.write("\n");
      out.write("        <li class=\"");
      out.print( disabledFirst );
      out.write("\" title=\"Trang đầu\"><a ");
      out.print( linkFirst );
      out.write(" >Trang đầu</a></li>\n");
      out.write("        <!--//Sử lý cho trang trước-->\n");
      out.write("        <li class=\"");
      out.print( disabledPrev );
      out.write("\" title=\"Trang trước\">\n");
      out.write("            <a \n");
      out.write("                ");

                    if(numberPagePrev > 0){
                        out.print("href='"+actionPage + numberPagePrev + paramPage+"'");
                    }
                
      out.write("\n");
      out.write("            >Prev\n");
      out.write("            </a>\n");
      out.write("        </li>\n");
      out.write("        <!--//Sử lý cho trang liên quan-->\n");
      out.write("        ");

        int forLine = 0;  
        if(totalPage > 5){
            forLine = 7;
        }else{
            forLine = (totalPage + 2);
        }
       
          String linkPage ="";
          String active ="";
          int pageLine =0;
          int numberPage =0;
          String  titlePage = "";

          for (int j=0; j < forLine ; j++) { 
              active ="";
              pageLine = 0;
              if(pages >= 3){
                  pageLine = 5;
              }else if(pages == 2){
                  if(totalPage >=5){
                    pageLine = 6;
                  }else{
                    pageLine = 5;
                  }
              }else{
                  pageLine = 7;
              }
              if(j<pageLine){
                  switch (j) {
                    case 0:
                      numberPage = 0;
                      if(pages >=3){
                        numberPage = pages - 2;
                      }
//                      System.out.println("case0");
                      break;
                    case 1:
                      numberPage = 0;
                      if(pages >=2){
                        numberPage = pages - 1;
                      }
//                      System.out.println("case1");
                      break;
                    case 2:
                      numberPage = pages;
                      active ="active";
//                      System.out.println("case2");
                      break;
                    case 3:
                      numberPage = 0;
                      if(pages < totalPage){
                        numberPage = pages + 1;
                      }
//                      System.out.println("case3");
                      break;
                    case 4:
                      numberPage = 0;
                      if(pages < totalPage && (totalPage - pages) >=2){
                        numberPage = pages + 2;
                      }
//                      System.out.println("case4");
                      break;
                    //TH page < 3
                    case 5:
                      if(pages < 5){
                        numberPage = pages + 3;
                      }
//                      System.out.println("case5");
                      break;
                     case 6:
                      if(pages < 5){
                        numberPage = pages + 4;
                      }
//                      System.out.println("case6");
                      break;
                    case 7:
                      if(pages < 5){
                        numberPage = pages + 5;
                      }
//                      System.out.println("case7");
                      break;
                    
                    default:
//                      System.out.println("caseDefault");
                      numberPage = 0;
                      break;
                  }
                  if(numberPage > 0){
                    linkPage = actionPage+numberPage+paramPage;
                    titlePage = "Trang "+ numberPage;
                    if(active.equals("active")){
                        out.println("<li class='"+active+"' title='"+titlePage+"'><a>"+numberPage+"</a> </li>");        
                    }else{
                        out.println("<li class='"+active+"' title='"+titlePage+"'><a href='"+linkPage+"'>"+numberPage+"</a> </li>");        
                    }
                  }
              }
          }
        
      out.write("\n");
      out.write("        <!--//Sử lý cho Trang kế tiếp-->\n");
      out.write("        <li class=\"");
      out.print( disabledNext );
      out.write("\" title=\"Trang kế tiếp\"><a ");

            if(numberPageNext > 0){
                out.print("href='"+actionPage + numberPageNext + paramPage + "'");
            }
        
      out.write(">Next</a></li>\n");
      out.write("        <!--//Sử lý cho Trang cuối-->\n");
      out.write("        ");

            String linkLast = "";
            String disabledLast = "disabled";
            if(totalPage != pages){
                disabledLast = "";
                linkLast = "href='"+actionPage + totalPage + paramPage +"'";
            }
        
      out.write("\n");
      out.write("        <li class=\"");
      out.print( disabledLast );
      out.write("\" title=\"Trang cuối\"><a ");
      out.print( linkLast );
      out.write(" >Trang cuối</a></li>\n");
      out.write("    ");

        }
    
      out.write("\r\n");
      out.write("                                </ul>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("</div>\r\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<div class=\"row-fluid\">\n");
      out.write("    <div id=\"footer\" class=\"span12\">2017 &copy;. Thiết kế bởi <a href=\"/\">DNH</a> </div>\n");
      out.write("</div>");
      out.write('\r');
      out.write('\n');
      out.write("    <script src =\"");
      out.print( baseUrl );
      out.write("/resource/js/jquery.ui.custom.js\"></script> \n");
      out.write("    <script src =\"");
      out.print( baseUrl );
      out.write("/resource/js/bootstrap.min.js\"></script> \n");
      out.write("    <script src =\"");
      out.print( baseUrl );
      out.write("/resource/js/bootstrap-colorpicker.js\"></script> \n");
      out.write("    <script src =\"");
      out.print( baseUrl );
      out.write("/resource/js/bootstrap-datepicker.js?v=1.0.0\"></script> \n");
      out.write("    <script src =\"");
      out.print( baseUrl );
      out.write("/resource/js/jquery.uniform.js\"></script> \n");
      out.write("    <script src =\"");
      out.print( baseUrl );
      out.write("/resource/js/maruti.js\"></script> \n");
      out.write("    <script src =\"");
      out.print( baseUrl );
      out.write("/resource/js/maruti.tables.js\"></script>\n");
      out.write("    <script src =\"");
      out.print( baseUrl );
      out.write("/resource/js/maruti.form_common.js\"></script>\n");
      out.write("    <script src =\"");
      out.print( baseUrl );
      out.write("/resource/js/jquery.dataTables.min.js?v=1.0.1\"></script> \n");
      out.write("</body>\n");
      out.write("</html>\n");
      out.write('\r');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}

/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.23
 * Generated at: 2017-12-12 02:36:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.charging;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.htc.airtime.model.ChargeOnline;
import com.htc.airtime.dao.ChargeOnlineDAO;
import com.htc.airtime.dao.UserServicesDAO;
import com.htc.airtime.model.UserServices;
import net.sf.json.JSONArray;
import java.util.ArrayList;
import com.htc.airtime.thread.AccountCacheManager;
import java.util.Map;
import java.util.LinkedHashMap;
import java.util.Iterator;
import java.util.Iterator;
import net.sf.json.JSONObject;
import com.htc.airtime.model.AirTimeRequest;
import com.htc.airtime.dao.AccountDAO;
import com.htc.airtime.components.Tool;
import com.htc.airtime.model.Account;
import com.htc.airtime.components.Helper;
import com.htc.airtime.dao.AccountDAO;
import com.htc.airtime.model.Account;
import com.htc.airtime.components.Tool;
import com.htc.airtime.dao.AccountDAO;
import com.htc.airtime.thread.AccountCacheManager;
import com.htc.airtime.dao.UserServicesDAO;
import com.htc.airtime.model.UserServices;
import java.util.ArrayList;
import com.htc.airtime.model.Account;
import com.htc.airtime.dao.AccountDAO;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(9);
    _jspx_dependants.put("/charging/../includes/topFooter.jsp", Long.valueOf(1513046144000L));
    _jspx_dependants.put("/charging/../includes/airTime/dataAcc.jsp", Long.valueOf(1513046149000L));
    _jspx_dependants.put("/charging/../includes/topMenu.jsp", Long.valueOf(1513046144000L));
    _jspx_dependants.put("/charging/../includes/footerJs.jsp", Long.valueOf(1513046144000L));
    _jspx_dependants.put("/charging/common.jsp", Long.valueOf(1513046143000L));
    _jspx_dependants.put("/charging/../includes/breadcrumb.jsp", Long.valueOf(1513046144000L));
    _jspx_dependants.put("/charging/../includes/../includes/checkLogin.jsp", Long.valueOf(1513046144000L));
    _jspx_dependants.put("/charging/../includes/head.jsp", Long.valueOf(1513046144000L));
    _jspx_dependants.put("/charging/../includes/mainMenu.jsp", Long.valueOf(1513046144000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Iterator");
    _jspx_imports_classes.add("com.htc.airtime.model.Account");
    _jspx_imports_classes.add("java.util.ArrayList");
    _jspx_imports_classes.add("com.htc.airtime.dao.AccountDAO");
    _jspx_imports_classes.add("java.util.LinkedHashMap");
    _jspx_imports_classes.add("com.htc.airtime.model.ChargeOnline");
    _jspx_imports_classes.add("com.htc.airtime.thread.AccountCacheManager");
    _jspx_imports_classes.add("com.htc.airtime.components.Tool");
    _jspx_imports_classes.add("net.sf.json.JSONArray");
    _jspx_imports_classes.add("com.htc.airtime.components.Helper");
    _jspx_imports_classes.add("com.htc.airtime.model.UserServices");
    _jspx_imports_classes.add("java.util.Map");
    _jspx_imports_classes.add("com.htc.airtime.dao.UserServicesDAO");
    _jspx_imports_classes.add("net.sf.json.JSONObject");
    _jspx_imports_classes.add("com.htc.airtime.model.AirTimeRequest");
    _jspx_imports_classes.add("com.htc.airtime.dao.ChargeOnlineDAO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');

    String baseUrl = request.getContextPath();
    if (Tool.checkNull(session.getAttribute("acc"))) {
        try {
            response.sendRedirect("/login.jsp");
            return;
        } catch (Exception e) {
            System.out.println("CO LOI NHA");
        }
    }
    String nameUser = "";
    String cpCodeUser = "";
    String checkTypeUser = "";
    int idUser = 0;
    Account acc = null;
    if (!Tool.checkNull(session.getAttribute("acc"))) {
        acc = (Account) session.getAttribute("acc");
        idUser = acc.getAccId();
        nameUser = acc.getUserName();
        cpCodeUser = acc.getCpCode();
        checkTypeUser = AccountDAO.TYPE.getType(acc.getUserType()).toString();
    }

      out.write(' ');
      out.write("<!DOCTYPE html><html lang=\"en\">\n");
      out.write("    <head>\n");
      out.write("        <title>CMS AirTime [sv1]</title>\n");
      out.write("        <meta charset=\"UTF-8\" />\n");
      out.write("        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n");
      out.write("        <link rel=\"stylesheet\" href=\"");
      out.print( baseUrl);
      out.write("/resource/css/bootstrap.min.css\" />\n");
      out.write("        <link rel=\"stylesheet\" href=\"");
      out.print( baseUrl);
      out.write("/resource/css/bootstrap-responsive.min.css\" />\n");
      out.write("        <link rel=\"stylesheet\" href=\"");
      out.print( baseUrl);
      out.write("/resource/css/colorpicker.css\" />\n");
      out.write("        <link rel=\"stylesheet\" href=\"");
      out.print( baseUrl);
      out.write("/resource/css/datepicker.css\" />\n");
      out.write("        <link rel=\"stylesheet\" href=\"");
      out.print( baseUrl);
      out.write("/resource/css/uniform.css\" />\n");
      out.write("        <link rel=\"stylesheet\" href=\"");
      out.print( baseUrl);
      out.write("/resource/css/select2.css\" />\n");
      out.write("        <link rel=\"stylesheet\" href=\"");
      out.print( baseUrl);
      out.write("/resource/css/maruti-style.css?v=1.0\" />\n");
      out.write("        <link rel=\"stylesheet\" href=\"");
      out.print( baseUrl);
      out.write("/resource/css/maruti-media.css\" class=\"skin-color\" />\n");
      out.write("        <script src =\"");
      out.print( baseUrl);
      out.write("/resource/js/jquery.min.js\"></script> \n");
      out.write("        <script src =\"");
      out.print( baseUrl);
      out.write("/resource/js/select2.min.js\"></script>\n");
      out.write("        <style>\n");
      out.write("            .checker{\n");
      out.write("                vertical-align: initial;\n");
      out.write("            }\n");
      out.write("        </style>\n");
      out.write("    </head>\n");
      out.write("    <body>\n");
      out.write("        <div id=\"header\"><!--Header-part-->\n");
      out.write("            <h1><a href=\"");
      out.print( baseUrl);
      out.write("\">CMS AirTime</a></h1>\n");
      out.write("        </div>");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");

    String moduleSourse = "charging";
    String moduleName = "charging";

      out.write("\n");
      out.write("<!--close-Header-part--> \n");
      out.write("<style>\n");
      out.write("    .visibility{\n");
      out.write("        visibility: hidden;\n");
      out.write("    }\n");
      out.write("    .dataTables_length,.dataTables_filter{\n");
      out.write("        top: 165px;\n");
      out.write("    }\n");
      out.write("    .dataTables_length{\n");
      out.write("        right: 25px;\n");
      out.write("    }\n");
      out.write("    .dataTables_filter{\n");
      out.write("        left: 35px;\n");
      out.write("    }\n");
      out.write("    .table-bordered th, .table-bordered td{\n");
      out.write("        border-left: 0px;\n");
      out.write("        border-top: 0px;\n");
      out.write("    }\n");
      out.write("</style>\n");
      out.write("<!--top-Header-menu-->\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!--top-Header-menu-->\n");
      out.write("<div id=\"user-nav\" class=\"navbar navbar-inverse\">\n");
      out.write("    <ul class=\"nav\">\n");
      out.write("       \n");
      out.write("        <li class=\" dropdown\" id=\"menu-messages\"><a href=\"#\" data-toggle=\"dropdown\" data-target=\"#menu-messages\" class=\"dropdown-toggle\"><i class=\"icon icon-user\"></i> <span class=\"text\">");
      out.print( nameUser);
      out.write(" ---\n");
      out.write("                    ");
      out.print( checkTypeUser);
      out.write("</span> <span class=\"label label-important\">5</span> <b class=\"caret\"></b></a>\n");
      out.write("            <ul class=\"dropdown-menu\">\n");
      out.write("                <li><a class=\"sAdd\" title=\"\" href=\"#\">Xem thông tin user</a></li>\n");
      out.write("            </ul>\n");
      out.write("        </li>\n");
      out.write("        <li class=\"\"><a title=\"\" href=\"");
      out.print( baseUrl);
      out.write("/logout\" onclick=\"return confirm('Bạn có chắc muốn thoát?')\" ><i class=\"icon icon-share-alt\"></i> <span class=\"text\">Logout</span></a></li>\n");
      out.write("    </ul>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("<!--close-top-Header-menu--> \n");
      out.write("<!--left-menu-stats-sidebar-->\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");

    AccountDAO accountPermission = new AccountDAO();

    boolean checkAccounts = true;
    boolean checkUserPermission = true;
    boolean checkModules = true;
    boolean checkServices = true;
    boolean checkAirtimeManager = true;
    boolean checkOtpAirTime = true;
    boolean checkChargeAirTime = true;
    boolean checkErrorOtpAirTime = true;
    boolean checkErrorChargeAirTime = true;

//    checkAccounts = accountPermission.checkList(request, session, "accounts");
//    checkUserPermission = accountPermission.checkList(request, session, "userPermission");
//    checkModules = accountPermission.checkList(request, session, "modules");
//    checkServices = accountPermission.checkList(request, session, "services");
//    checkAirtimeManager = accountPermission.checkList(request, session, "airtimeManager");
//    checkOtpAirTime = accountPermission.checkList(request, session, "otpAirTime");
//    checkChargeAirTime = accountPermission.checkList(request, session, "chargeAirTime");
//    checkErrorOtpAirTime = accountPermission.checkList(request, session, "errorOtpAirTime");
//    checkErrorChargeAirTime = accountPermission.checkList(request, session, "errorChargeAirTime");

      out.write("\n");
      out.write("<div id=\"sidebar\">\n");
      out.write("    <a href=\"#\" class=\"visible-phone\"><i class=\"icon icon-th-list\"></i> Common Elements</a><ul>\n");
      out.write("        <li class=\"active\"><a href=\"/\"><i class=\"icon icon-home\"></i> <span>Trang chủ</span></a> </li>\n");
      out.write("        ");
 if (checkTypeUser.equals("ADMIN") || checkTypeUser.equals("AGENCY_MANAGER") ) {
      out.write("\n");
      out.write("        <li class=\"submenu\"> <a href=\"#\"><i class=\"icon icon-th-list\"></i> <span>Quản lý</span></a>\n");
      out.write("            <ul>\n");
      out.write("               ");
 if (checkTypeUser.equals("ADMIN") ) {
      out.write("\n");
      out.write("                <li class=\"\"><a href=\"");
      out.print( baseUrl);
      out.write("/accounts\"><i class=\"icon icon-th-list\"></i> <span>Tài khoản</span></a> </li>\n");
      out.write("               ");
}
      out.write("\n");
      out.write("               ");
 if (checkTypeUser.equals("AGENCY_MANAGER") ) {
      out.write("\n");
      out.write("                <li class=\"\"><a href=\"");
      out.print( baseUrl);
      out.write("/accounts\"><i class=\"icon icon-th-list\"></i> <span>Tài khoản</span></a> </li>\n");
      out.write("               ");
}
      out.write("\n");
      out.write("               ");
 if (checkTypeUser.equals("ADMIN") ) {
      out.write("\n");
      out.write("                <li class=\"\"><a href=\"");
      out.print( baseUrl);
      out.write("/modules\"><i class=\"icon icon-th-list\"></i> <span>Module</span></a> </li>\n");
      out.write("                <li class=\"\"><a href=\"");
      out.print( baseUrl);
      out.write("/services\"><i class=\"icon icon-th-list\"></i> <span>Dịch vụ</span></a> </li>\n");
      out.write("                <li class=\"\"><a href=\"");
      out.print( baseUrl);
      out.write("/airtimeManager\"><i class=\"icon icon-th-list\"></i> <span>Đăng ký dịch vụ airtime</span></a> </li>\n");
      out.write("                <li class=\"\"><a href=\"");
      out.print( baseUrl);
      out.write("/userPermission\"><i class=\"icon icon-th-list\"></i> <span>Phân quyền tài khoản</span></a> </li>\n");
      out.write("               ");
}
      out.write("\n");
      out.write("               ");
 if (checkTypeUser.equals("AGENCY_MANAGER") ) {
      out.write("\n");
      out.write("                <!--//DANH CHO DAI LY-->\n");
      out.write("                <li class=\"\"><a href=\"");
      out.print( baseUrl);
      out.write("/userPermissionChild\"><i class=\"icon icon-th-list\"></i> <span>Phân quyền tài khoản</span></a> </li>\n");
      out.write("               ");
}
      out.write("\n");
      out.write("            </ul>\n");
      out.write("        </li>\n");
      out.write("        ");
}
      out.write("\n");
      out.write("\n");
      out.write("        <li class=\"\"> <a href=\"");
      out.print( baseUrl);
      out.write("/reqAll\"><i class=\"icon icon-th-list\"></i> <span>Lịch sử Charging</span> </a>\n");
      out.write("            <ul>\n");
      out.write("                <li><a href=\"");
      out.print( baseUrl);
      out.write("/reqOtp\">OTP</a></li>\n");
      out.write("                <li><a href=\"");
      out.print( baseUrl);
      out.write("/reqCharging\">Charging</a></li>\n");
      out.write("            </ul>\n");
      out.write("        </li>\n");
      out.write("        <li class=\"submenu\"> <a href=\"#\"><i class=\"icon icon-th-list\"></i> <span>Thống kê Charging</span> </a>\n");
      out.write("            <ul>\n");
      out.write("                <li><a href=\"");
      out.print( baseUrl);
      out.write("/reqCharging/statistic.jsp\">Charging</a></li>\n");
      out.write("            </ul>\n");
      out.write("        </li>\n");
      out.write("        <li class=\"\"> <a href=\"");
      out.print( baseUrl);
      out.write("/charging\"><i class=\"icon icon-th-list\"></i> <span>Charging</span> </a>\n");
      out.write("        </li>\n");
      out.write("    </ul>\n");
      out.write("</div>");
      out.write("\n");
      out.write("<!--close-left-menu-stats-sidebar-->\n");
    String actionName = "Demo Lấy Mã OTP dịch vụ AirTime";


      out.write('\n');
//   
    String user = "";
    String cpCode = "";
    String accesskey = "";
    String cpGame = "";
    String msisdn = "";
    String price = "";

    //LAY DU LIEU MAC DINH KHI TK LOGIN : idUser
    UserServicesDAO userServices = new UserServicesDAO();
    UserServices dtAccReg = userServices.viewByField("USERNAME", nameUser);
    System.out.println("====================START: CHO NAY LA NOI BAT DAU CUA DU LIEU TK LOGIN");

//    if (!Tool.checkNull(dtAccReg.getGameName())) {
//        accesskey = dtAccReg.getGameName();
//    }
//    String cpCode = "PFFC3";
//    String user = "ahp";
//    String accesskey = "FYp7acheY9uCMxbVyv";
//    String cpGame = "PS3";
//    String msisdn = "8496493366";
//    String price = "5000";
//    String code = "";
//    String message = "";
    System.out.println("====================END: CHO NAY LA NOI BAT DAU CUA DU LIEU TK LOGUIN");
//    AirTimeRequest airTimeRequest = (AirTimeRequest) session.getAttribute("dataGet");
//    if (airTimeRequest != null) {
//        System.out.println("CO DU LIEU NHA");
//        cpCode = airTimeRequest.getCpCode();
//        user = airTimeRequest.getUser();
//        accesskey = airTimeRequest.getAccesskey();
//        cpGame = airTimeRequest.getCpGame();
//        msisdn = airTimeRequest.getMsisdn();
//        price = airTimeRequest.getPrice();
//        try {
//            JSONObject rsJson = JSONObject.fromObject(airTimeRequest.getResult());
//            code = rsJson.getString("code");
//            message = rsJson.getString("message");
//
//        } catch (Exception e) {
//            System.out.println("KHONG PHAI CHUOI JSON");
//        }
//
//    }

      out.write('\n');
      out.write('\n');

    ChargeOnlineDAO chargeOnlineDAO = new ChargeOnlineDAO();
    int limit = 100;
    //    ArrayList<ChargeOnline> datas = chargeOnlineDAO.getListSearch(limit);
    ArrayList<ChargeOnline> datas = chargeOnlineDAO.getListSearch(idUser, limit);

      out.write("\n");
      out.write("<div id=\"content\">\n");
      out.write("    <div id=\"content-header\">\n");
      out.write("        ");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<div id=\"breadcrumb\"> \n");
      out.write("    <a href=\"/\" title=\"Go to Home\" class=\"tip-bottom\"><i class=\"icon-home\"></i> Trang chủ</a> \n");
      out.write("    <!--nameModule ,nameAction được khai báo bên view action-->\n");
      out.write("    \n");
      out.write("    <a href=\"");
      out.print( baseUrl +"/"+ moduleSourse );
      out.write("\" class=\"tip-bottom\">");
 if(moduleName != ""){out.println(moduleName);
    } 
      out.write("</a> \n");
      out.write("    <a href=\"#\" class=\"current\">");
 if(actionName != ""){out.println(actionName);
    } 
      out.write("</a> \n");
      out.write("</div>\n");
      out.write("\n");
      out.write("    </div>\n");
      out.write("    <div class=\"container-fluid\">\n");
      out.write("\n");
      out.write("        <div class=\"row-fluid\">\n");
      out.write("            <div class=\"span12\">\n");
      out.write("                <!-- //FORM SEARCH -->\n");
      out.write("\n");
      out.write("                <form action=\"");
      out.print( baseUrl);
      out.write("/uploadFilePhone\" name=\"myform\" id=\"myform\" method=\"post\" class=\"form-horizontal\" enctype=\"multipart/form-data\">\n");
      out.write("                    <div class=\"widget-box search\">\n");
      out.write("                        <div class=\"widget-content \">\n");
      out.write("                            <div style=\"text-align: center;display: none\" id=\"notification\">\n");
      out.write("                                ");
 String mess = (String) session.getAttribute("mess"); 
      out.write("\n");
      out.write("                                ");
 if (!Tool.checkNull(mess)) {
                                        out.println(mess);
                                    } 
      out.write("\n");
      out.write("                            </div>\n");
      out.write("                            <table class=\"table table-bordered table-striped\">\n");
      out.write("                                <tbody>\n");
      out.write("                                    ");

                                        int colspan = 4;
                                        if (!Tool.checkNull(session.getAttribute("mess"))) {
                                    
      out.write("\n");
      out.write("                                    <tr>\n");
      out.write("                                        <td style=\"text-align: center;\" colspan=\"");
      out.print(colspan);
      out.write("\">\n");
      out.write("                                            ");
      out.print( session.getAttribute("mess"));
      out.write("\n");
      out.write("                                        </td>\n");
      out.write("                                    </tr>\n");
      out.write("                                    ");
 //
                                            session.removeAttribute("mess");
                                        }

                                    
      out.write("\n");
      out.write("                                    ");
 //LAY TAI ACC CACHE
                                        String selected = "";
                                    
      out.write("\n");
      out.write("                                    ");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
  //        

    String keycache = "airTime_cacheAcc";
    ArrayList<Account> arrAcc = null;
    AccountDAO accDao = new AccountDAO();
    if (arrAcc != null) {
        System.out.println("----------------------");
        System.out.println("accCache" + arrAcc);
        System.out.println("----------------------");
    } else {
        System.out.println("LAY DU LIEU VA TAO CACHE");
        System.out.println("KHONG TON TAI CACHE TAI KHOAN NHE");
    }
    switch (checkTypeUser) {
        case "USER":
            break;
        case "ADMIN":
            arrAcc = (ArrayList<Account>) AccountCacheManager.get(keycache);
            break;
        case "AGENCY":
            arrAcc = accDao.getListAgency(idUser, 1);
            break;
        case "AGENCY_MANAGER":
            arrAcc = accDao.getListAgency(idUser, 1);
            break;
        default:
            break;
    }
    //===================================================
//    AccountDAO accSearch = new AccountDAO();
//    ArrayList<Account> dtsAccSearch = null;
//    
//
//    UserServicesDAO userServicecSearch = new UserServicesDAO();
//    ArrayList<UserServices> dtsCodeGameSearch = null;
//    switch (checkTypeUser) {
//        case "USER":
//            break;
//        case "ADMIN":
//            dtsAccSearch = accSearch.getListByField("STATUS", 1);
//            dtsCodeGameSearch = userServicecSearch.getListByField("STATUS", 1);
//            break;
//        case "AGENCY":
//            arrAcc = dtsAccSearch = accSearch.getListAgency(idUser, 1);
//            dtsCodeGameSearch = userServicecSearch.getListByField(dtsAccSearch);
//            break;
//        case "AGENCY_MANAGER":
//            arrAcc = dtsAccSearch = accSearch.getListAgency(idUser, 1);
//            dtsCodeGameSearch = userServicecSearch.getListByField(dtsAccSearch);
//            break;
//        default:
////            dtsAccSearch = accSearch.getListByField("STATUS", 1);
////            dtsSearch = userServicecSearch.getListByField("STATUS", 1);
//            break;
//    }

      out.write("\n");
      out.write("                                    <tr>\n");
      out.write("                                        <td style=\"text-align: center;\" colspan=\"");
      out.print(colspan);
      out.write("\">\n");
      out.write("                                            <input type=\"hidden\" class=\"visibility\" id=\"deleteDataOld\" name=\"deleteDataOld\">\n");
      out.write("                                            <select class=\"span2 invisible\" name=\"cpCode\" id=\"cpCode\">\n");
      out.write("                                                <option value=\"all\" user=\"all\">Chọn Mã Tài khoản</option>\n");
      out.write("                                                ");

                                                    if (arrAcc != null) {
                                                        for (Account one : arrAcc) {
                                                            selected = "";
                                                            if (cpCode.equals(one.getCpCode())) {
                                                                selected = "selected";
                                                            }
                                                
      out.write("\n");
      out.write("                                                <option ");
      out.print( selected);
      out.write(" value=\"");
      out.print( one.getCpCode());
      out.write("\" user=\"");
      out.print( one.getUserName());
      out.write("\"  >");
      out.print( one.getCpCode());
      out.write("</option>\n");
      out.write("                                                ");
 }
                                                    } 
      out.write("\n");
      out.write("                                            </select>\n");
      out.write("                                            <select class=\"span2\" name=\"user\" id=\"user\">\n");
      out.write("                                                <option value=\"all\" cpCode=\"all\">Chọn Tài khoản</option>\n");
      out.write("                                                ");
                                                    if (arrAcc != null) {
                                                        for (Account one : arrAcc) {
                                                            selected = "";
                                                            if (user.equals(one.getUserName())) {
                                                                selected = "selected";
                                                            }
                                                
      out.write("\n");
      out.write("                                                <option ");
      out.print( selected);
      out.write(" value=\"");
      out.print( one.getUserName());
      out.write("\" cpCode=\"");
      out.print( one.getCpCode());
      out.write('"');
      out.write('>');
      out.print( one.getUserName());
      out.write("</option>\n");
      out.write("                                                ");
 }
                                                    } 
      out.write("\n");
      out.write("                                            </select>\n");
      out.write("                                            <select class=\"span2\" name=\"cpGame\" id=\"cpGame\">\n");
      out.write("                                                ");

                                                    UserServicesDAO userSv = new UserServicesDAO();
                                                    ArrayList<UserServices> dts = null;
                                                    dts = userSv.getListByField("STATUS", "1",arrAcc);
                                                    if (dts != null && dts.size() > 0) {
                                                
      out.write("\n");
      out.write("                                                <option value=\"all\" user=\"all\" cpCode=\"all\" >Chọn mã game</option>\n");
      out.write("                                                ");

                                                    for (UserServices dt : dts) {

                                                        selected = "";
                                                        if (cpGame.equals(dt.getCodeGame())) {
                                                            selected = "selected";
                                                        }
                                                
      out.write("\n");
      out.write("                                                <option ");
      out.print( selected);
      out.write(" value=\"");
      out.print( dt.getCodeGame());
      out.write("\"   user=\"");
      out.print( dt.getUserName());
      out.write("\" cpCode=\"");
      out.print( dt.getCpCode());
      out.write("\" ak=\"");
      out.print( dt.getAccessKey());
      out.write('"');
      out.write('>');
      out.print( dt.getCodeGame());
      out.write(' ');
      out.write('-');
      out.write(' ');
      out.print( dt.getGameName());
      out.write("</option>\n");
      out.write("                                                ");
        }
                                                } else {

                                                
      out.write("\n");
      out.write("                                                <option value=\"all\">Không có dữ liệu</option>\n");
      out.write("                                                ");
    }
                                                
      out.write("\n");
      out.write("                                            </select>\n");
      out.write("                                            <select class=\"span2\" name=\"price\" id=\"price\">\n");
      out.write("                                                ");
  //
                                                    LinkedHashMap<String, String> arrayPrice = new LinkedHashMap<String, String>();
                                                    String[] prices = {"5", "15", "30", "50", "100"};
                                                    arrayPrice.put("0", "Chọn mệnh giá tiền");
                                                    for (int i = 0; i < prices.length; i++) {
                                                        arrayPrice.put(prices[i], "Mệnh giá " + prices[i] + ".000 đ");
                                                        //                        System.out.println("GIA TRI "+i+" Là :"+prices[i]);
                                                    }
                                                    System.out.println("prices arr Lenght : " + prices.length);
                                                    System.out.println("arrayPrice Lenght : " + arrayPrice.size());
                                                    //                        arrayResultCode.forEach((k,v) -> System.out.println("key: "+k+" =>  value:"+v));

                                                    Iterator it2 = arrayPrice.entrySet().iterator();
                                                    String selectedPrice = "";
                                                    while (it2.hasNext()) {
                                                        Map.Entry pair = (Map.Entry) it2.next();
                                                        //                            System.out.println(pair.getKey() + " = " + pair.getValue());
                                                        selectedPrice = "";
                                                        System.out.println("GIA TIEN :" + price);
                                                        if ((pair.getKey() + "000").equals(price)) {
                                                            selectedPrice = "selected";
                                                        }
                                                        out.println("<option value='" + pair.getKey() + "' " + selectedPrice + ">" + pair.getValue() + "</option>");
                                                        it2.remove(); // avoids a ConcurrentModificationException
                                                    }
                                                
      out.write("\n");
      out.write("                                            </select>\n");
      out.write("                                            <!--Nhập Mã Truy Cập:--> \n");
      out.write("                                            <input class=\"invisible\" type=\"text\" name=\"accesskey\" value=\"");
      out.print( accesskey);
      out.write("\" id=\"accesskey\" placeholder=\"Nhập Mat khau\" class=\"\">\n");
      out.write("                                        </td>\n");
      out.write("                                    </tr>\n");
      out.write("                                    <tr>\n");
      out.write("                                        <td style=\"text-align: center;\" colspan=\"");
      out.print(colspan);
      out.write("\">\n");
      out.write("                                            Nhập lên từ 1 số điện thoại: <input type=\"text\" id=\"phoneNumber\" name=\"phoneNumber\" value=\"\" placeholder=\"Nhập vào 1 số điện thoại\">\n");
      out.write("                                            ::::\n");
      out.write("                                            Nhập lên từ 1 danh sách: <input type=\"file\" id=\"fileUpload\" name=\"fileUpload\">\n");
      out.write("                                            <p id=\"errorAddPhoneNumber\"></p>\n");
      out.write("                                            <!--<button type=\"button\"  name=\"delelePhone\" id=\"delelePhone\" class=\"btn btn-danger\" >Thêm Mới</button>-->\n");
      out.write("                                            <button type=\"button\"  name=\"importFile\" id=\"importFile\" class=\"btn btn-danger\" >Thêm Mới</button>\n");
      out.write("                                        </td>\n");
      out.write("                                    </tr>\n");
      out.write("                                </tbody>\n");
      out.write("                            </table>\n");
      out.write("                            <table class=\"table table-bordered data-table\">\n");
      out.write("                                <thead>\n");
      out.write("                                    <tr>\n");
      out.write("                                        <th style=\"height: 30px;\">\n");
      out.write("                                        </th>\n");
      out.write("                                        <th>\n");
      out.write("\n");
      out.write("                                        </th>\n");
      out.write("                                        <th class=\"hide\"></th>\n");
      out.write("                                        <th></th>\n");
      out.write("                                    </tr>\n");
      out.write("                                </thead>\n");
      out.write("                                <tbody>\n");
      out.write("                                    ");

                                        for (ChargeOnline one : datas) {
                                            int priceRequest = 0;
                                            String priceNumber = "null";
                                            if (!Tool.checkNull(one.getPrice())) {
                                                priceRequest = Integer.parseInt(one.getPrice() + "000");
                                                priceNumber = Helper.formatNumber(priceRequest) + " VNĐ";

                                            }
                                    
      out.write("\n");
      out.write("                                    <tr>\n");
      out.write("                                        <td style=\"text-align: right;\">\n");
      out.write("                                            <!--<button type=\"button\" name=\"delPhone\" id=\"delPhone\" currentId=\"");
      out.print( one.getId());
      out.write("\" class=\"btn btn-small btn-primary\" msisdn=\"");
      out.print( one.getMisidn());
      out.write("\" user=\"");
      out.print( one.getUserName());
      out.write("\" cpCode=\"");
      out.print( one.getCpCode());
      out.write("\" cpGame=\"");
      out.print( one.getGameCode());
      out.write("\" accesskey=\"");
      out.print( one.getAccessKey());
      out.write("\" price=\"");
      out.print( one.getPrice());
      out.write("\" reqId=\"");
      out.print( "cms_" + Tool.getRandomString(11));
      out.write("\">Xóa</button>-->\n");
      out.write("                                            Nhập số điện thoại :\n");
      out.write("                                            <input type=\"text\" name=\"msisdn\" value=\"");
      out.print( one.getMisidn());
      out.write("\" placeholder=\"Nhập số điện thoại\" title=\"Số điện thoại\" readonly>\n");
      out.write("                                            <button type=\"button\" name=\"getOtp\" id=\"getOtp\" currentId=\"");
      out.print( one.getId());
      out.write("\" class=\"btn btn-small btn-primary\" msisdn=\"");
      out.print( one.getMisidn());
      out.write("\" user=\"");
      out.print( one.getUserName());
      out.write("\" cpCode=\"");
      out.print( one.getCpCode());
      out.write("\" cpGame=\"");
      out.print( one.getGameCode());
      out.write("\" accesskey=\"");
      out.print( one.getAccessKey());
      out.write("\" price=\"");
      out.print( one.getPrice());
      out.write("\" reqId=\"");
      out.print( "cms_" + Tool.getRandomString(11));
      out.write("\">Lấy mã</button>\n");
      out.write("                                            <p id=\"error");
      out.print( one.getMisidn());
      out.write("\">\n");
      out.write("                                                <!--Noi dung loi hien thi o day duoc khong-->\n");
      out.write("                                            </p>\n");
      out.write("                                        </td>\n");
      out.write("                                        <td class=\"hide\">");
      out.print( one.getMisidn());
      out.write("</td>\n");
      out.write("                                        <td>\n");
      out.write("\n");
      out.write("                                            <button type=\"button\" class=\"btn btn-small btn-danger\" > Giá tiền : ");
      out.print( priceNumber);
      out.write("</button>\n");
      out.write("                                            <button type=\"button\" name=\"loading\" id=\"loading");
      out.print( one.getMisidn());
      out.write("\" class=\"btn btn-small btn-warning visibility\" >Đang chờ</button>\n");
      out.write("                                        </td>\n");
      out.write("                                        <td style=\"text-align: left;\">\n");
      out.write("                                            <input type=\"text\" name=\"otpCode\"  id=\"otpCode");
      out.print( one.getMisidn());
      out.write("\" class=\"visibility\" value=\"\" placeholder=\"Nhập mã OTP\" readonly title=\"Nhập mã OTP\">\n");
      out.write("                                            <button type=\"button\" name=\"chargeOtp\" id=\"chargeOtp");
      out.print( one.getMisidn());
      out.write("\" class=\"btn btn-small btn-primary visibility\" disabled=\"\" >Charge</button>\n");
      out.write("                                            <p id=\"errorCharge");
      out.print( one.getMisidn());
      out.write("\" class=\"visibility\">\n");
      out.write("                                                <!--Thông báo cho nguo dung trang thai charge-->\n");
      out.write("                                            </p>    \n");
      out.write("                                        </td>\n");
      out.write("\n");
      out.write("                                    </tr>\n");
      out.write("                                    ");
}
      out.write("\n");
      out.write("                                </tbody>\n");
      out.write("                            </table>    \n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("\n");
      out.write("                </form>\n");
      out.write("                <!-- //FORM SEARCH -->\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("</div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<div class=\"row-fluid\">\n");
      out.write("    <div id=\"footer\" class=\"span12\">2017 &copy;. Thiết kế bởi <a href=\"/\">DNH</a> </div>\n");
      out.write("</div>");
      out.write('\n');
      out.write("    <script src =\"");
      out.print( baseUrl );
      out.write("/resource/js/jquery.ui.custom.js\"></script> \n");
      out.write("    <script src =\"");
      out.print( baseUrl );
      out.write("/resource/js/bootstrap.min.js\"></script> \n");
      out.write("    <script src =\"");
      out.print( baseUrl );
      out.write("/resource/js/bootstrap-colorpicker.js\"></script> \n");
      out.write("    <script src =\"");
      out.print( baseUrl );
      out.write("/resource/js/bootstrap-datepicker.js?v=1.0.0\"></script> \n");
      out.write("    <script src =\"");
      out.print( baseUrl );
      out.write("/resource/js/jquery.uniform.js\"></script> \n");
      out.write("    <script src =\"");
      out.print( baseUrl );
      out.write("/resource/js/maruti.js\"></script> \n");
      out.write("    <script src =\"");
      out.print( baseUrl );
      out.write("/resource/js/maruti.tables.js\"></script>\n");
      out.write("    <script src =\"");
      out.print( baseUrl );
      out.write("/resource/js/maruti.form_common.js\"></script>\n");
      out.write("    <script src =\"");
      out.print( baseUrl );
      out.write("/resource/js/jquery.dataTables.min.js?v=1.0.1\"></script> \n");
      out.write("</body>\n");
      out.write("</html>\n");
      out.write("\n");
      out.write("<script src =\"");
      out.print( baseUrl);
      out.write("/resource/myJs/myScript.js?v=1.0.3\"></script> \n");
      out.write("\n");
      out.write("<script>\n");
      out.write("\n");
      out.write("    $(document).ready(function () {\n");
      out.write("        /* Act on the event */\n");
      out.write("        var l = window.location;\n");
      out.write("        var base_url = l.protocol + \"//\" + l.host;\n");
      out.write("        var url = base_url + \"/sendOtp\";\n");
      out.write("\n");
      out.write("        function builPhone84(phone) {\n");
      out.write("            var firstLetter = \"\";\n");
      out.write("            var strPhone = \"\";\n");
      out.write("            firstLetter = phone.substring(0, 1);\n");
      out.write("            firstLetter = phone.substring(0, 1);\n");
      out.write("            if (firstLetter == \"0\") {\n");
      out.write("                strPhone = \"84\";\n");
      out.write("                strPhone += phone.substring(1);\n");
      out.write("            } else {\n");
      out.write("                strPhone = phone;\n");
      out.write("            }\n");
      out.write("            return strPhone;\n");
      out.write("        }\n");
      out.write("        $('body').on('click', '#importFile', function (event) {\n");
      out.write("            event.preventDefault();\n");
      out.write("//            if (confirm(\"Bạn có muốn xóa dữ liệu cũ không?\")) {\n");
      out.write("//                // your deletion code\n");
      out.write("//                $('#deleteDataOld').prop('type', 'radio').prop('checked', true);\n");
      out.write("//            }\n");
      out.write("            $('#deleteDataOld').prop('type', 'radio');\n");
      out.write("            if (!confirm(\"Bạn có muốn giữ lại dữ liệu cũ không?\")) {\n");
      out.write("                // your deletion code\n");
      out.write("                $('#deleteDataOld').prop('checked', true);\n");
      out.write("            }else{\n");
      out.write("                $('#deleteDataOld').prop('checked', false);\n");
      out.write("            }\n");
      out.write("            $('#myform').submit();\n");
      out.write("        });\n");
      out.write("        $('body').on('click', 'button[name=\"getOtp\"]', function (event) {\n");
      out.write("            event.preventDefault();\n");
      out.write("\n");
      out.write("            var event = $(this).attr(\"event\");\n");
      out.write("            if (event === \"on\") {\n");
      out.write("                console.log(\"Khong thuc hien\");\n");
      out.write("                return;\n");
      out.write("            }\n");
      out.write("            console.log(\"thuc hien\");\n");
      out.write("            var currentid = $(this).attr(\"currentid\");\n");
      out.write("            var msisdn = $(this).attr(\"msisdn\");\n");
      out.write("            var user = $(this).attr(\"user\");\n");
      out.write("            var cpCode = $(this).attr(\"cpCode\");\n");
      out.write("            var cpGame = $(this).attr(\"cpGame\");\n");
      out.write("            var accesskey = $(this).attr(\"accesskey\");\n");
      out.write("            var price = $(this).attr(\"price\");\n");
      out.write("            var cpRequestId = $(this).attr(\"reqId\");\n");
      out.write("            var otp = 1;\n");
      out.write("//            console.log(user);\n");
      out.write("//            console.log(cpCode);\n");
      out.write("//            console.log(cpgame);\n");
      out.write("//            console.log(price);\n");
      out.write("//            console.log(accesskey);\n");
      out.write("//            console.log(msisdn);\n");
      out.write("//            console.log(cpRequestId);\n");
      out.write("//            console.log(otp);\n");
      out.write("//            console.log(url);\n");
      out.write("            var myMisidn = $('button[msisdn=\"' + msisdn + '\"]');\n");
      out.write("            $.ajax({\n");
      out.write("                url: url,\n");
      out.write("                type: \"post\",\n");
      out.write("                //                dataType: \"html\",\n");
      out.write("                dataType: \"json\",\n");
      out.write("                data: {currentid: currentid, user: user, cpCode: cpCode, cpGame: cpGame, price: price, accesskey: accesskey, msisdn: msisdn, cpRequestId: cpRequestId, otp: otp},\n");
      out.write("                beforeSend: function () {\n");
      out.write("                    myMisidn.attr(\"event\", \"on\").html(\"loading...\");\n");
      out.write("                },\n");
      out.write("                success: function (response) {\n");
      out.write("                    console.log(response);\n");
      out.write("                    console.log(\"response.code:\" + response.code);\n");
      out.write("                    if (response.code === \"04\") {\n");
      out.write("                        myMisidn.html(\"Lấy mã thành công\");\n");
      out.write("                        myMisidn.removeClass(\"btn-primary\").addClass(\"btn-success\").siblings(\"input\").attr('readonly', \"readonly\");\n");
      out.write("                        $('#error' + msisdn).html(\"Bạn đã gửi yêu cầu lấy mã Otp thành công\");\n");
      out.write("                        //CENTER\n");
      out.write("                        $('#loading' + msisdn).removeClass(\"visibility\").html(\"Nhập mã OTP\");\n");
      out.write("                        $('#otpCode' + msisdn).removeClass(\"visibility\").removeAttr(\"readonly\");\n");
      out.write("                        $('#chargeOtp' + msisdn).removeClass(\"visibility\").removeAttr(\"disabled\").attr(\"event\", \"on\");\n");
      out.write("                    } else {\n");
      out.write("                        myMisidn.html(\"Thất bại/Lấy lại\");\n");
      out.write("                        myMisidn.removeAttr(\"event\")\n");
      out.write("                        $('#error' + msisdn).html(response.message);\n");
      out.write("                        $(this).removeAttr(\"event\");\n");
      out.write("                    }\n");
      out.write("                },\n");
      out.write("                error: function (jqXHR, textStatus, errorThrown) {\n");
      out.write("                    console.log(textStatus, errorThrown);\n");
      out.write("                }\n");
      out.write("            });\n");
      out.write("        });\n");
      out.write("//        =========================== CHARGE ===========================\n");
      out.write("        $('body').on('click', 'button[name=\"chargeOtp\"]', function (event) {\n");
      out.write("            event.preventDefault();\n");
      out.write("\n");
      out.write("            var event = $(this).attr(\"event\");\n");
      out.write("            if (event !== \"on\") {\n");
      out.write("                console.log(\"Khong thuc hien\");\n");
      out.write("                return;\n");
      out.write("            }\n");
      out.write("            console.log(\"thuc hien\");\n");
      out.write("            var msisdn = $(this).parent().siblings().children(\"button\").attr(\"msisdn\");\n");
      out.write("            var myMisidn = $('button[msisdn=\"' + msisdn + '\"]');\n");
      out.write("            console.log(\"msisdn:\" + msisdn);\n");
      out.write("\n");
      out.write("            var currentid = myMisidn.attr(\"currentid\");\n");
      out.write("            var user = myMisidn.attr(\"user\");\n");
      out.write("            var cpCode = myMisidn.attr(\"cpCode\");\n");
      out.write("            var cpGame = myMisidn.attr(\"cpGame\");\n");
      out.write("            var accesskey = myMisidn.attr(\"accesskey\");\n");
      out.write("            var price = myMisidn.attr(\"price\");\n");
      out.write("            var cpRequestId = myMisidn.attr(\"reqId\");\n");
      out.write("            var otp = $(this).siblings('input[name=\"otpCode\"]').val();\n");
      out.write("\n");
      out.write("            var mybtncharge = $('button#chargeOtp' + msisdn);\n");
      out.write("            if (otp === \"\") {\n");
      out.write("                $('#errorCharge' + msisdn).removeClass(\"visibility\").html(\"Vui lòng nhập mã Otp!\");\n");
      out.write("                return;\n");
      out.write("            }\n");
      out.write("//            console.log(user);\n");
      out.write("//            console.log(cpcode);\n");
      out.write("//            console.log(cpgame);\n");
      out.write("//            console.log(price);\n");
      out.write("//            console.log(accesskey);\n");
      out.write("//            console.log(msisdn);\n");
      out.write("//            console.log(cpRequestId);\n");
      out.write("//            console.log(otp);\n");
      out.write("//            console.log(url);\n");
      out.write("            $.ajax({\n");
      out.write("                url: url,\n");
      out.write("                type: \"post\",\n");
      out.write("                //                dataType: \"html\",\n");
      out.write("                dataType: \"json\",\n");
      out.write("                data: {currentid: currentid, user: user, cpCode: cpCode, cpGame: cpGame, price: price, accesskey: accesskey, msisdn: msisdn, cpRequestId: cpRequestId, otp: otp},\n");
      out.write("                beforeSend: function () {\n");
      out.write("                    $('#errorCharge' + msisdn).addClass(\"visibility\")\n");
      out.write("                    mybtncharge.removeAttr(\"event\").html(\"Process...\");\n");
      out.write("                },\n");
      out.write("                success: function (response) {\n");
      out.write("                    console.log(response);\n");
      out.write("                    if (response.code === \"00\") {\n");
      out.write("                        mybtncharge.html(\"Charge thành công\");\n");
      out.write("                        $('#errorCharge' + msisdn).removeClass(\"visibility\").html(\"Charge thành công cho số điện thoại \" + msisdn);\n");
      out.write("                        mybtncharge.removeClass(\"btn-primary\").addClass(\"btn-success\").siblings(\"input\").attr('readonly', \"readonly\");\n");
      out.write("//                        mybtncharge.removeClass(\"btn-primary\").addClass(\"btn-success\").siblings(\"input\").attr('readonly', \"readonly\");\n");
      out.write("//                        //CENTER\n");
      out.write("//                        $('#loading' + msisdn).removeClass(\"visibility\").html(\"Nhập mã OTP\");\n");
      out.write("//                        $('#otpCode' + msisdn).removeClass(\"visibility\").removeAttr(\"readonly\");\n");
      out.write("//                        $('#chargeOtp' + msisdn).removeClass(\"visibility\").removeAttr(\"disabled\");\n");
      out.write("                    } else {\n");
      out.write("                        mybtncharge.html(\"Charge Thất bại/Charge lại\");\n");
      out.write("                        $('#errorCharge' + msisdn).removeClass(\"visibility\").html(response.message);\n");
      out.write("                        mybtncharge.attr(\"event\", \"on\");\n");
      out.write("                    }\n");
      out.write("                },\n");
      out.write("                error: function (jqXHR, textStatus, errorThrown) {\n");
      out.write("                    console.log(textStatus, errorThrown);\n");
      out.write("                }\n");
      out.write("            });\n");
      out.write("        });\n");
      out.write("//        setInterval(function(){\n");
      out.write("//            var notification = $('#notification').html();\n");
      out.write("//            notification = $.trim(notification);\n");
      out.write("//            console.log(notification);\n");
      out.write("//            if(notification !== \"\"){\n");
      out.write("//        \t$('#notification').html('');\n");
      out.write("//                alert(notification);\n");
      out.write("//            }\n");
      out.write("//    \t}, 1000);\n");
      out.write("    });\n");
      out.write("</script>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}

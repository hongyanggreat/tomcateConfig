/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.23
 * Generated at: 2017-12-12 02:36:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.reqCharging;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.htc.airtime.model.AirtimeReq;
import com.htc.airtime.components.Tool;
import net.sf.json.JSONObject;
import java.util.regex.Pattern;
import com.htc.airtime.dao.ChargeDAO;
import com.htc.airtime.components.MyDate;
import com.htc.airtime.dao.AccountDAO;
import com.htc.airtime.components.Tool;
import com.htc.airtime.model.Account;
import com.htc.airtime.components.Helper;
import com.htc.airtime.dao.AccountDAO;
import com.htc.airtime.model.Account;
import com.htc.airtime.components.Tool;
import com.htc.airtime.dao.AccountDAO;
import com.htc.airtime.thread.AccountCacheManager;
import com.htc.airtime.dao.UserServicesDAO;
import com.htc.airtime.model.UserServices;
import java.util.ArrayList;
import com.htc.airtime.model.Account;
import com.htc.airtime.dao.AccountDAO;
import com.htc.airtime.dao.OtpDAO;
import com.htc.airtime.thread.AccountCacheManager;
import com.htc.airtime.model.Account;
import com.htc.airtime.dao.AccountDAO;
import com.htc.airtime.model.UserServices;
import com.htc.airtime.dao.UserServicesDAO;
import com.htc.airtime.components.Tool;
import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.Iterator;
import java.util.Map;

public final class statistic_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(10);
    _jspx_dependants.put("/reqCharging/../includes/topFooter.jsp", Long.valueOf(1513046144000L));
    _jspx_dependants.put("/reqCharging/../includes/../includes/checkLogin.jsp", Long.valueOf(1513046144000L));
    _jspx_dependants.put("/reqCharging/../includes/topMenu.jsp", Long.valueOf(1513046144000L));
    _jspx_dependants.put("/reqCharging/../includes/airTime/_formSearch.jsp", Long.valueOf(1513046150000L));
    _jspx_dependants.put("/reqCharging/../includes/head.jsp", Long.valueOf(1513046144000L));
    _jspx_dependants.put("/reqCharging/common.jsp", Long.valueOf(1513046146000L));
    _jspx_dependants.put("/reqCharging/../includes/mainMenu.jsp", Long.valueOf(1513046144000L));
    _jspx_dependants.put("/reqCharging/../includes/breadcrumb.jsp", Long.valueOf(1513046144000L));
    _jspx_dependants.put("/reqCharging/../includes/footerJs.jsp", Long.valueOf(1513046144000L));
    _jspx_dependants.put("/reqCharging/../includes/airTime/dataAcc.jsp", Long.valueOf(1513046149000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Iterator");
    _jspx_imports_classes.add("com.htc.airtime.dao.ChargeDAO");
    _jspx_imports_classes.add("com.htc.airtime.model.AirtimeReq");
    _jspx_imports_classes.add("com.htc.airtime.model.Account");
    _jspx_imports_classes.add("com.htc.airtime.dao.AccountDAO");
    _jspx_imports_classes.add("java.util.ArrayList");
    _jspx_imports_classes.add("com.htc.airtime.dao.OtpDAO");
    _jspx_imports_classes.add("java.util.LinkedHashMap");
    _jspx_imports_classes.add("com.htc.airtime.thread.AccountCacheManager");
    _jspx_imports_classes.add("com.htc.airtime.components.Tool");
    _jspx_imports_classes.add("com.htc.airtime.components.Helper");
    _jspx_imports_classes.add("com.htc.airtime.model.UserServices");
    _jspx_imports_classes.add("java.util.Map");
    _jspx_imports_classes.add("net.sf.json.JSONObject");
    _jspx_imports_classes.add("com.htc.airtime.dao.UserServicesDAO");
    _jspx_imports_classes.add("com.htc.airtime.components.MyDate");
    _jspx_imports_classes.add("java.util.regex.Pattern");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write('\n');

    String baseUrl = request.getContextPath();
    if (Tool.checkNull(session.getAttribute("acc"))) {
        try {
            response.sendRedirect("/login.jsp");
            return;
        } catch (Exception e) {
            System.out.println("CO LOI NHA");
        }
    }
    String nameUser = "";
    String cpCodeUser = "";
    String checkTypeUser = "";
    int idUser = 0;
    Account acc = null;
    if (!Tool.checkNull(session.getAttribute("acc"))) {
        acc = (Account) session.getAttribute("acc");
        idUser = acc.getAccId();
        nameUser = acc.getUserName();
        cpCodeUser = acc.getCpCode();
        checkTypeUser = AccountDAO.TYPE.getType(acc.getUserType()).toString();
    }

      out.write(' ');
      out.write("<!DOCTYPE html><html lang=\"en\">\n");
      out.write("    <head>\n");
      out.write("        <title>CMS AirTime [sv1]</title>\n");
      out.write("        <meta charset=\"UTF-8\" />\n");
      out.write("        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n");
      out.write("        <link rel=\"stylesheet\" href=\"");
      out.print( baseUrl);
      out.write("/resource/css/bootstrap.min.css\" />\n");
      out.write("        <link rel=\"stylesheet\" href=\"");
      out.print( baseUrl);
      out.write("/resource/css/bootstrap-responsive.min.css\" />\n");
      out.write("        <link rel=\"stylesheet\" href=\"");
      out.print( baseUrl);
      out.write("/resource/css/colorpicker.css\" />\n");
      out.write("        <link rel=\"stylesheet\" href=\"");
      out.print( baseUrl);
      out.write("/resource/css/datepicker.css\" />\n");
      out.write("        <link rel=\"stylesheet\" href=\"");
      out.print( baseUrl);
      out.write("/resource/css/uniform.css\" />\n");
      out.write("        <link rel=\"stylesheet\" href=\"");
      out.print( baseUrl);
      out.write("/resource/css/select2.css\" />\n");
      out.write("        <link rel=\"stylesheet\" href=\"");
      out.print( baseUrl);
      out.write("/resource/css/maruti-style.css?v=1.0\" />\n");
      out.write("        <link rel=\"stylesheet\" href=\"");
      out.print( baseUrl);
      out.write("/resource/css/maruti-media.css\" class=\"skin-color\" />\n");
      out.write("        <script src =\"");
      out.print( baseUrl);
      out.write("/resource/js/jquery.min.js\"></script> \n");
      out.write("        <script src =\"");
      out.print( baseUrl);
      out.write("/resource/js/select2.min.js\"></script>\n");
      out.write("        <style>\n");
      out.write("            .checker{\n");
      out.write("                vertical-align: initial;\n");
      out.write("            }\n");
      out.write("        </style>\n");
      out.write("    </head>\n");
      out.write("    <body>\n");
      out.write("        <div id=\"header\"><!--Header-part-->\n");
      out.write("            <h1><a href=\"");
      out.print( baseUrl);
      out.write("\">CMS AirTime</a></h1>\n");
      out.write("        </div>");
      out.write('\n');
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");

    String moduleSourse = "reqCharging";
    String moduleName = "Request Charging";

      out.write("\n");
      out.write("<!--close-Header-part--> \n");
      out.write("\n");
      out.write("<!--top-Header-menu-->\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!--top-Header-menu-->\n");
      out.write("<div id=\"user-nav\" class=\"navbar navbar-inverse\">\n");
      out.write("    <ul class=\"nav\">\n");
      out.write("       \n");
      out.write("        <li class=\" dropdown\" id=\"menu-messages\"><a href=\"#\" data-toggle=\"dropdown\" data-target=\"#menu-messages\" class=\"dropdown-toggle\"><i class=\"icon icon-user\"></i> <span class=\"text\">");
      out.print( nameUser);
      out.write(" ---\n");
      out.write("                    ");
      out.print( checkTypeUser);
      out.write("</span> <span class=\"label label-important\">5</span> <b class=\"caret\"></b></a>\n");
      out.write("            <ul class=\"dropdown-menu\">\n");
      out.write("                <li><a class=\"sAdd\" title=\"\" href=\"#\">Xem thông tin user</a></li>\n");
      out.write("            </ul>\n");
      out.write("        </li>\n");
      out.write("        <li class=\"\"><a title=\"\" href=\"");
      out.print( baseUrl);
      out.write("/logout\" onclick=\"return confirm('Bạn có chắc muốn thoát?')\" ><i class=\"icon icon-share-alt\"></i> <span class=\"text\">Logout</span></a></li>\n");
      out.write("    </ul>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("<!--close-top-Header-menu--> \n");
      out.write("<!--left-menu-stats-sidebar-->\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");

    AccountDAO accountPermission = new AccountDAO();

    boolean checkAccounts = true;
    boolean checkUserPermission = true;
    boolean checkModules = true;
    boolean checkServices = true;
    boolean checkAirtimeManager = true;
    boolean checkOtpAirTime = true;
    boolean checkChargeAirTime = true;
    boolean checkErrorOtpAirTime = true;
    boolean checkErrorChargeAirTime = true;

//    checkAccounts = accountPermission.checkList(request, session, "accounts");
//    checkUserPermission = accountPermission.checkList(request, session, "userPermission");
//    checkModules = accountPermission.checkList(request, session, "modules");
//    checkServices = accountPermission.checkList(request, session, "services");
//    checkAirtimeManager = accountPermission.checkList(request, session, "airtimeManager");
//    checkOtpAirTime = accountPermission.checkList(request, session, "otpAirTime");
//    checkChargeAirTime = accountPermission.checkList(request, session, "chargeAirTime");
//    checkErrorOtpAirTime = accountPermission.checkList(request, session, "errorOtpAirTime");
//    checkErrorChargeAirTime = accountPermission.checkList(request, session, "errorChargeAirTime");

      out.write("\n");
      out.write("<div id=\"sidebar\">\n");
      out.write("    <a href=\"#\" class=\"visible-phone\"><i class=\"icon icon-th-list\"></i> Common Elements</a><ul>\n");
      out.write("        <li class=\"active\"><a href=\"/\"><i class=\"icon icon-home\"></i> <span>Trang chủ</span></a> </li>\n");
      out.write("        ");
 if (checkTypeUser.equals("ADMIN") || checkTypeUser.equals("AGENCY_MANAGER") ) {
      out.write("\n");
      out.write("        <li class=\"submenu\"> <a href=\"#\"><i class=\"icon icon-th-list\"></i> <span>Quản lý</span></a>\n");
      out.write("            <ul>\n");
      out.write("               ");
 if (checkTypeUser.equals("ADMIN") ) {
      out.write("\n");
      out.write("                <li class=\"\"><a href=\"");
      out.print( baseUrl);
      out.write("/accounts\"><i class=\"icon icon-th-list\"></i> <span>Tài khoản</span></a> </li>\n");
      out.write("               ");
}
      out.write("\n");
      out.write("               ");
 if (checkTypeUser.equals("AGENCY_MANAGER") ) {
      out.write("\n");
      out.write("                <li class=\"\"><a href=\"");
      out.print( baseUrl);
      out.write("/accounts\"><i class=\"icon icon-th-list\"></i> <span>Tài khoản</span></a> </li>\n");
      out.write("               ");
}
      out.write("\n");
      out.write("               ");
 if (checkTypeUser.equals("ADMIN") ) {
      out.write("\n");
      out.write("                <li class=\"\"><a href=\"");
      out.print( baseUrl);
      out.write("/modules\"><i class=\"icon icon-th-list\"></i> <span>Module</span></a> </li>\n");
      out.write("                <li class=\"\"><a href=\"");
      out.print( baseUrl);
      out.write("/services\"><i class=\"icon icon-th-list\"></i> <span>Dịch vụ</span></a> </li>\n");
      out.write("                <li class=\"\"><a href=\"");
      out.print( baseUrl);
      out.write("/airtimeManager\"><i class=\"icon icon-th-list\"></i> <span>Đăng ký dịch vụ airtime</span></a> </li>\n");
      out.write("                <li class=\"\"><a href=\"");
      out.print( baseUrl);
      out.write("/userPermission\"><i class=\"icon icon-th-list\"></i> <span>Phân quyền tài khoản</span></a> </li>\n");
      out.write("               ");
}
      out.write("\n");
      out.write("               ");
 if (checkTypeUser.equals("AGENCY_MANAGER") ) {
      out.write("\n");
      out.write("                <!--//DANH CHO DAI LY-->\n");
      out.write("                <li class=\"\"><a href=\"");
      out.print( baseUrl);
      out.write("/userPermissionChild\"><i class=\"icon icon-th-list\"></i> <span>Phân quyền tài khoản</span></a> </li>\n");
      out.write("               ");
}
      out.write("\n");
      out.write("            </ul>\n");
      out.write("        </li>\n");
      out.write("        ");
}
      out.write("\n");
      out.write("\n");
      out.write("        <li class=\"\"> <a href=\"");
      out.print( baseUrl);
      out.write("/reqAll\"><i class=\"icon icon-th-list\"></i> <span>Lịch sử Charging</span> </a>\n");
      out.write("            <ul>\n");
      out.write("                <li><a href=\"");
      out.print( baseUrl);
      out.write("/reqOtp\">OTP</a></li>\n");
      out.write("                <li><a href=\"");
      out.print( baseUrl);
      out.write("/reqCharging\">Charging</a></li>\n");
      out.write("            </ul>\n");
      out.write("        </li>\n");
      out.write("        <li class=\"submenu\"> <a href=\"#\"><i class=\"icon icon-th-list\"></i> <span>Thống kê Charging</span> </a>\n");
      out.write("            <ul>\n");
      out.write("                <li><a href=\"");
      out.print( baseUrl);
      out.write("/reqCharging/statistic.jsp\">Charging</a></li>\n");
      out.write("            </ul>\n");
      out.write("        </li>\n");
      out.write("        <li class=\"\"> <a href=\"");
      out.print( baseUrl);
      out.write("/charging\"><i class=\"icon icon-th-list\"></i> <span>Charging</span> </a>\n");
      out.write("        </li>\n");
      out.write("    </ul>\n");
      out.write("</div>");
      out.write("\n");
      out.write("<!--close-left-menu-stats-sidebar-->\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
  //        

    String keycache = "airTime_cacheAcc";
    ArrayList<Account> arrAcc = null;
    AccountDAO accDao = new AccountDAO();
    if (arrAcc != null) {
        System.out.println("----------------------");
        System.out.println("accCache" + arrAcc);
        System.out.println("----------------------");
    } else {
        System.out.println("LAY DU LIEU VA TAO CACHE");
        System.out.println("KHONG TON TAI CACHE TAI KHOAN NHE");
    }
    switch (checkTypeUser) {
        case "USER":
            break;
        case "ADMIN":
            arrAcc = (ArrayList<Account>) AccountCacheManager.get(keycache);
            break;
        case "AGENCY":
            arrAcc = accDao.getListAgency(idUser, 1);
            break;
        case "AGENCY_MANAGER":
            arrAcc = accDao.getListAgency(idUser, 1);
            break;
        default:
            break;
    }
    //===================================================
//    AccountDAO accSearch = new AccountDAO();
//    ArrayList<Account> dtsAccSearch = null;
//    
//
//    UserServicesDAO userServicecSearch = new UserServicesDAO();
//    ArrayList<UserServices> dtsCodeGameSearch = null;
//    switch (checkTypeUser) {
//        case "USER":
//            break;
//        case "ADMIN":
//            dtsAccSearch = accSearch.getListByField("STATUS", 1);
//            dtsCodeGameSearch = userServicecSearch.getListByField("STATUS", 1);
//            break;
//        case "AGENCY":
//            arrAcc = dtsAccSearch = accSearch.getListAgency(idUser, 1);
//            dtsCodeGameSearch = userServicecSearch.getListByField(dtsAccSearch);
//            break;
//        case "AGENCY_MANAGER":
//            arrAcc = dtsAccSearch = accSearch.getListAgency(idUser, 1);
//            dtsCodeGameSearch = userServicecSearch.getListByField(dtsAccSearch);
//            break;
//        default:
////            dtsAccSearch = accSearch.getListByField("STATUS", 1);
////            dtsSearch = userServicecSearch.getListByField("STATUS", 1);
//            break;
//    }

      out.write('\n');
    String actionName = "Thống kê charging";


      out.write('\n');
    // THIET LAP GIA TRI MAC DINH
    String msisdn = "";
//    String formDate = "01/" + MyDate.createDate("MM") + "/" + MyDate.createDate("yyyy");
    String formDate = MyDate.createDate("dd/MM/yyyy");
    String toDate = MyDate.createDate("dd/MM/yyyy");
    String user = "";
    String cpCode = "";
    String cpGame = "";
    String price = "";
    String status = "";
    int limit = 100;
    int offset = 0;
    int totalItem = 0;
    int pages = 1;
    int totalPage = 1;

    //LAY GIA TRI TU REQUESR 
    if (!Tool.checkNull(request.getParameter("msisdn"))) {
        msisdn = request.getParameter("msisdn");
    }
    if (!Tool.checkNull(request.getParameter("formDate"))) {
        formDate = request.getParameter("formDate");
    }
    if (!Tool.checkNull(request.getParameter("toDate"))) {
        toDate = request.getParameter("toDate");
    }
    if (!Tool.checkNull(request.getParameter("user")) && !request.getParameter("user").equals("all")) {
        user = request.getParameter("user");
    }
    if (!Tool.checkNull(request.getParameter("cpCode")) && !request.getParameter("cpCode").equals("all")) {
        cpCode = request.getParameter("cpCode");
    }
    if (!Tool.checkNull(request.getParameter("cpGame")) && !request.getParameter("cpGame").equals("all")) {
        cpGame = request.getParameter("cpGame");
    }
    if (!Tool.checkNull(request.getParameter("price")) && !request.getParameter("price").equals("0")) {
        price = request.getParameter("price");
    }
    if (!Tool.checkNull(request.getParameter("status")) && !request.getParameter("status").equals("all")) {
        status = request.getParameter("status");
    }

      out.write('\n');
  // LAY DANH SACH THONG KE CHARGE
    ChargeDAO chargeDAO = new ChargeDAO();
    ArrayList<AirtimeReq> datas = chargeDAO.getListStatistic(msisdn, formDate, toDate, user, cpCode, cpGame, price, status, arrAcc);
    session.removeAttribute("chargingStatisticExport");
    String linkExport = "";
    if (datas.size() > 0) {
        session.setAttribute("chargingStatisticExport", datas);
        linkExport = baseUrl + "/" + moduleSourse + "/exportStatistic.jsp?"
                + "msisdn=" + msisdn
                + "&formDate=" + formDate
                + "&toDate=" + toDate
                + "&user=" + user
                + "&cpCode=" + cpCode
                + "&cpGame=" + cpGame
                + "&price=" + price
                + "&status=" + status;
    }

      out.write("\n");
      out.write("<div id=\"content\">\n");
      out.write("    <div id=\"content-header\">\n");
      out.write("        ");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<div id=\"breadcrumb\"> \n");
      out.write("    <a href=\"/\" title=\"Go to Home\" class=\"tip-bottom\"><i class=\"icon-home\"></i> Trang chủ</a> \n");
      out.write("    <!--nameModule ,nameAction được khai báo bên view action-->\n");
      out.write("    \n");
      out.write("    <a href=\"");
      out.print( baseUrl +"/"+ moduleSourse );
      out.write("\" class=\"tip-bottom\">");
 if(moduleName != ""){out.println(moduleName);
    } 
      out.write("</a> \n");
      out.write("    <a href=\"#\" class=\"current\">");
 if(actionName != ""){out.println(actionName);
    } 
      out.write("</a> \n");
      out.write("</div>\n");
      out.write("\n");
      out.write("    </div>\n");
      out.write("    <div class=\"container-fluid\">\n");
      out.write("\n");
      out.write("        <div class=\"row-fluid\">\n");
      out.write("            <div class=\"span12\">\n");
      out.write("                <!-- //FORM SEARCH -->\n");
      out.write("                ");

                    String buttonSubmit = "Thống kê";
                
      out.write("\n");
      out.write("                ");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<style>\n");
      out.write("    .visibility{\n");
      out.write("        visibility: hidden;\n");
      out.write("    }\n");
      out.write("</style>\n");
      out.write("<form action=\"\" name=\"myform\" method=\"get\" class=\"form-horizontal\">\n");
      out.write("    <div class=\"widget-box search\">\n");
      out.write("        <div class=\"widget-content \">\n");
      out.write("            <table class=\"table table-bordered table-striped\">\n");
      out.write("                <tbody>\n");
      out.write("                    ");

                        if (!Tool.checkNull(session.getAttribute("mess"))) {
                    
      out.write("\n");
      out.write("                    <tr>\n");
      out.write("                        <td style=\"text-align: center;\">\n");
      out.write("                            ");
      out.print( session.getAttribute("mess"));
      out.write("\n");
      out.write("                        </td>\n");
      out.write("                    </tr>\n");
      out.write("                    ");
 //
                            session.removeAttribute("mess");
                        }

                    
      out.write("\n");
      out.write("                    ");
 //LAY TAI ACC CACHE
                        String selected = "";
                        String formatDate = "dd/mm/yyyy";
                    
      out.write("\n");
      out.write("                    <tr>\n");
      out.write("                        <td style=\"text-align: center;\">\n");
      out.write("                            Nhập số điện thoại :<input type=\"text\" name=\"msisdn\" value=\"");
      out.print( msisdn);
      out.write("\" placeholder=\"Nhập số điện thoại\">\n");
      out.write("                            Từ ngày: <input type=\"text\" name=\"formDate\" value=\"");
      out.print( formDate);
      out.write("\" data-date-format=\"");
      out.print( formatDate);
      out.write("\" value=\"\" class=\"datepicker span2\" placeholder=\"Nhập ngày bắt đầu\">\n");
      out.write("                            Đến ngày: <input type=\"text\" name=\"toDate\" value=\"");
      out.print( toDate);
      out.write("\" data-date-format=\"");
      out.print( formatDate);
      out.write("\" value=\"\" class=\"datepicker span2\" placeholder=\"Nhập ngày kết thúc\">\n");
      out.write("                        </td>\n");
      out.write("                    </tr>\n");
      out.write("                    <tr>\n");
      out.write("                        <td style=\"text-align: center;\">\n");
      out.write("                            <select class=\"span2 invisible\" name=\"cpCode\" id=\"cpCode\">\n");
      out.write("                                <option value=\"all\" user=\"all\" >Chọn Mã Tài khoản</option>\n");
      out.write("                                ");

                                    if (arrAcc != null) {
                                        for (Account one : arrAcc) {
                                            selected = "";
                                            if (cpCode.equals(one.getCpCode())) {
                                                selected = "selected";
                                            }
                                
      out.write("\n");
      out.write("                                <option ");
      out.print( selected);
      out.write(" value=\"");
      out.print( one.getCpCode());
      out.write("\" user=\"");
      out.print( one.getUserName());
      out.write("\"  >");
      out.print( one.getCpCode());
      out.write("</option>\n");
      out.write("                                ");
 }
                                    } 
      out.write("\n");
      out.write("                            </select>\n");
      out.write("                            <select class=\"span2\" name=\"user\" id=\"user\">\n");
      out.write("                                <option value=\"all\" cpCode=\"all\">Chọn Tài khoản</option>\n");
      out.write("                                ");

                                    if (arrAcc != null) {
                                        for (Account one : arrAcc) {
                                            selected = "";
                                            if (user.equals(one.getUserName())) {
                                                selected = "selected";
                                            }
                                
      out.write("\n");
      out.write("                                <option ");
      out.print( selected);
      out.write(" value=\"");
      out.print( one.getUserName());
      out.write("\" cpCode=\"");
      out.print( one.getCpCode());
      out.write('"');
      out.write('>');
      out.print( one.getUserName());
      out.write("</option>\n");
      out.write("                                ");
 }
                                    } 
      out.write("\n");
      out.write("                            </select>\n");
      out.write("                            <select class=\"span3\" name=\"cpGame\" id=\"cpGame\">\n");
      out.write("                                ");

                                    UserServicesDAO userSv = new UserServicesDAO();
                                    ArrayList<UserServices> dts = null;
//                                    dts = userSv.getListByField("STATUS", 1);
                                    dts = userSv.getListByField("STATUS", "1", arrAcc);
                                    if (dts != null && dts.size() > 0) {
                                
      out.write("\n");
      out.write("                                <option value=\"all\" user=\"all\" cpCode=\"all\" >Chọn mã game</option>\n");
      out.write("                                ");

                                    for (UserServices dt : dts) {

                                        selected = "";
                                        if (cpGame.equals(dt.getCodeGame())) {
                                            selected = "selected";
                                        }
                                
      out.write("\n");
      out.write("                                <option ");
      out.print( selected);
      out.write(" value=\"");
      out.print( dt.getCodeGame());
      out.write("\" user=\"");
      out.print( dt.getUserName());
      out.write("\" cpCode=\"");
      out.print( dt.getCpCode());
      out.write('"');
      out.write('>');
      out.print( dt.getCodeGame());
      out.write(' ');
      out.write('-');
      out.write(' ');
      out.print( dt.getGameName());
      out.write("</option>\n");
      out.write("                                ");
        }
                                } else {

                                
      out.write("\n");
      out.write("                                <option value=\"all\">Không có dữ liệu</option>\n");
      out.write("                                ");
    }
                                
      out.write("\n");
      out.write("                            </select>\n");
      out.write("                            <select class=\"span2\" name=\"price\" id=\"price\">\n");
      out.write("                                ");
  //
                                    LinkedHashMap<String, String> arrayPrice = new LinkedHashMap<String, String>();
                                    String[] prices = {"5", "15", "30", "50", "100"};
                                    arrayPrice.put("0", "Chọn mệnh giá tiền");
                                    for (int i = 0; i < prices.length; i++) {
                                        arrayPrice.put(prices[i], "Mệnh giá " + prices[i] + ".000 đ");
                                        //                        System.out.println("GIA TRI "+i+" Là :"+prices[i]);
                                    }
                                    System.out.println("prices arr Lenght : " + prices.length);
                                    System.out.println("arrayPrice Lenght : " + arrayPrice.size());
                                    //                        arrayResultCode.forEach((k,v) -> System.out.println("key: "+k+" =>  value:"+v));

                                    Iterator it2 = arrayPrice.entrySet().iterator();
                                    String selectedPrice = "";
                                    while (it2.hasNext()) {
                                        Map.Entry pair = (Map.Entry) it2.next();
                                        //                            System.out.println(pair.getKey() + " = " + pair.getValue());
                                        selectedPrice = "";
                                        System.out.println("GIA TIEN :" + price);
                                        if ((pair.getKey()).equals(price)) {
                                            selectedPrice = "selected";
                                        }
                                        out.println("<option value='" + pair.getKey() + "' " + selectedPrice + ">" + pair.getValue() + "</option>");
                                        it2.remove(); // avoids a ConcurrentModificationException
                                    }
                                
      out.write("\n");
      out.write("                            </select>\n");
      out.write("                            <select class=\"span2\" name=\"status\" id=\"status\">\n");
      out.write("                                <option value=\"all\">Trạng thái charge</option>\n");
      out.write("                                <option value=\"SUCCESS\" ");

                                    if ("SUCCESS".equals(status)) {
                                        out.print("selected='selected'");
                                    }
                                        
      out.write(">Thành công</option>\n");
      out.write("                                <option value=\"FAIL\" ");

                                    if ("FAIL".equals(status)) {
                                        out.print("selected='selected'");
                                    }
                                        
      out.write(">Thất bại</option>\n");
      out.write("                            </select>\n");
      out.write("\n");
      out.write("                        </td>\n");
      out.write("                    </tr>\n");
      out.write("\n");
      out.write("                    <tr>\n");
      out.write("                        <td style=\"text-align: center;\">\n");
      out.write("                            <button type=\"submit\" class=\"btn btn-success\">");
      out.print( buttonSubmit);
      out.write("</button>\n");
      out.write("                            ");

                                if (!Tool.checkNull(linkExport)) {
                            
      out.write("\n");
      out.write("                            <a href=\"");
      out.print( linkExport);
      out.write("\" class=\"btn btn-success\" target=\"_blank\">Xuất Excel</a>\n");
      out.write("                            ");
}
      out.write("\n");
      out.write("                        </td>\n");
      out.write("                    </tr>\n");
      out.write("\n");
      out.write("                </tbody>\n");
      out.write("            </table>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("</form>");
      out.write("\n");
      out.write("                <!-- //FORM SEARCH -->\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("\n");
      out.write("        <div class=\"row-fluid\">\n");
      out.write("            <div class=\"widget-box search\">\n");
      out.write("                <div class=\"widget-content \">\n");
      out.write("                    <table class=\"table table-bordered table-striped\">\n");
      out.write("                        <thead>\n");
      out.write("                            <tr>\n");
      out.write("                                ");
 // show du lieu 
                                    int totalSuccess = 0;
                                    int totalFail = 0;
                                    int totalAmount = 0;
                                    int totalAmountSuccess = 0;
                                    int totalAmountFail = 0;
                                    for (AirtimeReq one : datas) {
                                        String rsMps = one.getRsMps();
                                        if (!rsMps.equals("0")) {
                                            totalFail += (int) one.getTotalReq();
                                            totalAmountFail += (int) one.getTotalAmount();
                                        } else {
                                            totalSuccess += (int) one.getTotalReq();
                                            totalAmountSuccess = (int) one.getTotalAmount();

                                        }
                                        totalAmount += (int) one.getTotalAmount();

                                    }
                                
      out.write("\n");
      out.write("                                <th colspan=\"10\" style=\"text-align: left\">\n");
      out.write("                                    <button  class=\"btn \">Thống kê</button>\n");
      out.write("                                    <button  class=\"btn btn-success\">Thành công : ");
      out.print( totalSuccess);
      out.write("</button>\n");
      out.write("                                    <button  class=\"btn btn-danger\">Thất bại : ");
      out.print( totalFail);
      out.write("</button>\n");
      out.write("                                    <button  class=\"btn btn-success\">Tổng Số tiền Success: ");
      out.print( Helper.formatNumber(totalAmountSuccess));
      out.write(" vnđ</button>\n");
      out.write("                                    <button  class=\"btn btn-danger\">Tổng Số tiền Fail: ");
      out.print( Helper.formatNumber(totalAmountFail));
      out.write(" vnđ</button>\n");
      out.write("                                    <button  class=\"btn btn-primary\">Tổng Số tiền : ");
      out.print( Helper.formatNumber(totalAmount));
      out.write(" vnđ</button>\n");
      out.write("\n");
      out.write("                                </th>\n");
      out.write("                            </tr>\n");
      out.write("                            <tr>\n");
      out.write("                                <th>Stt</th>\n");
      out.write("                                <th>Tên CP</th>\n");
      out.write("                                <th>Mã CP</th>\n");
      out.write("                                <th>Game CP</th>\n");
      out.write("                                <th>Kết Quả</th>\n");
      out.write("                                <th>Tổng Số tiển</th>\n");
      out.write("                                <th>Số Request</th>\n");
      out.write("                            </tr>\n");
      out.write("                        </thead>\n");
      out.write("                        <tfoot>\n");
      out.write("                            <tr>\n");
      out.write("                                <th>Stt</th>\n");
      out.write("                                <th>Tên CP</th>\n");
      out.write("                                <th>Mã CP</th>\n");
      out.write("                                <th>Game CP</th>\n");
      out.write("                                <th>Kết Quả</th>\n");
      out.write("                                <th>Tổng Số tiển</th>\n");
      out.write("                                <th>Số Request</th>\n");
      out.write("                            </tr>\n");
      out.write("                        </tfoot>\n");
      out.write("                        <tbody>\n");
      out.write("                            ");
 // show du lieu   
                                int i = 0;
                                for (AirtimeReq one : datas) {
                                    i++;
                                    String stt = "Thành công";
                                    String rsMps = one.getRsMps();
                                    if (!rsMps.equals("0")) {
                                        stt = "Thất bại";
                                    }
                                    String errorMess = "";
                                    if (!Tool.checkNull(one.getRsAhp())) {
                                        JSONObject errorMessObj = JSONObject.fromObject(one.getRsAhp());
                                        errorMess = errorMessObj.getString("message");
                                    }
                            
      out.write("\n");
      out.write("                            <tr class=\"gradeX\">\n");
      out.write("                                <td style=\"width:30px;text-align:center\">");
      out.print( i);
      out.write("</td>\n");
      out.write("                                <td style=\"text-align:center\">");
      out.print( one.getUserName());
      out.write("</td>\n");
      out.write("                                <td style=\"text-align:center\">");
      out.print( one.getCpCode());
      out.write("</td>\n");
      out.write("                                <td style=\"text-align:center\">");
      out.print( one.getGameCode());
      out.write("</td>\n");
      out.write("                                <td style=\"text-align:left\" title=\"");
      out.print( errorMess);
      out.write('"');
      out.write('>');
      out.print( stt );
      out.write("</td>\n");
      out.write("                                <td style=\"text-align:center\">");
      out.print( Helper.formatNumber(one.getTotalAmount()));
      out.write(" VNĐ</td>\n");
      out.write("                                <td style=\"text-align:center\">");
      out.print( Helper.formatNumber(one.getTotalReq()));
      out.write("</td>\n");
      out.write("                            </tr>\n");
      out.write("                            ");
 }
      out.write("\n");
      out.write("                        </tbody>\n");
      out.write("                    </table>\n");
      out.write("                </div>\n");
      out.write("\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("</div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<div class=\"row-fluid\">\n");
      out.write("    <div id=\"footer\" class=\"span12\">2017 &copy;. Thiết kế bởi <a href=\"/\">DNH</a> </div>\n");
      out.write("</div>");
      out.write('\n');
      out.write("    <script src =\"");
      out.print( baseUrl );
      out.write("/resource/js/jquery.ui.custom.js\"></script> \n");
      out.write("    <script src =\"");
      out.print( baseUrl );
      out.write("/resource/js/bootstrap.min.js\"></script> \n");
      out.write("    <script src =\"");
      out.print( baseUrl );
      out.write("/resource/js/bootstrap-colorpicker.js\"></script> \n");
      out.write("    <script src =\"");
      out.print( baseUrl );
      out.write("/resource/js/bootstrap-datepicker.js?v=1.0.0\"></script> \n");
      out.write("    <script src =\"");
      out.print( baseUrl );
      out.write("/resource/js/jquery.uniform.js\"></script> \n");
      out.write("    <script src =\"");
      out.print( baseUrl );
      out.write("/resource/js/maruti.js\"></script> \n");
      out.write("    <script src =\"");
      out.print( baseUrl );
      out.write("/resource/js/maruti.tables.js\"></script>\n");
      out.write("    <script src =\"");
      out.print( baseUrl );
      out.write("/resource/js/maruti.form_common.js\"></script>\n");
      out.write("    <script src =\"");
      out.print( baseUrl );
      out.write("/resource/js/jquery.dataTables.min.js?v=1.0.1\"></script> \n");
      out.write("</body>\n");
      out.write("</html>\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("    $(document).ready(function () {\n");
      out.write("        $(\"body\").on('click', '#user', function (event) {\n");
      out.write("            event.preventDefault();\n");
      out.write("            var cpCode = $('option:selected', this).attr(\"cpCode\");\n");
      out.write("            console.log(cpCode);\n");
      out.write("            $(\"#cpCode\").val(cpCode).trigger('change');\n");
      out.write("            getCpGame(cpCode);\n");
      out.write("        });\n");
      out.write("        $(\"body\").on('click', '#cpCode', function (event) {\n");
      out.write("            event.preventDefault();\n");
      out.write("            var cpCode = $(this).val();\n");
      out.write("            var user = $('option:selected', this).attr(\"user\");\n");
      out.write("            $(\"#user\").val(user).trigger('change');\n");
      out.write("            getCpGame(cpCode);\n");
      out.write("        });\n");
      out.write("        $(\"body\").on('click', '#cpGame', function (event) {\n");
      out.write("            event.preventDefault();\n");
      out.write("            var cpGame = $(this).val();\n");
      out.write("            if (cpGame != \"all\") {\n");
      out.write("                var user = $('option:selected', this).attr(\"user\");\n");
      out.write("                var cpCode = $('option:selected', this).attr(\"cpCode\");\n");
      out.write("                $(\"#user\").val(user).trigger('change');\n");
      out.write("                $(\"#cpCode\").val(cpCode).trigger('change');\n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("\n");
      out.write("        function getCpGame(cpCode) {\n");
      out.write("\n");
      out.write("            var l = window.location;\n");
      out.write("//            var base_url = l.protocol + \"//\" + l.host + \"/\" + l.pathname.split('/')[1];\n");
      out.write("            var base_url = l.protocol + \"//\" + l.host;\n");
      out.write("            var url = base_url + \"/ajaxFile/cpGame.jsp\";\n");
      out.write("            console.log(url);\n");
      out.write("            $.ajax({\n");
      out.write("                url: url,\n");
      out.write("                type: \"post\",\n");
      out.write("                dataType: \"html\",\n");
      out.write("                data: {cpCode: cpCode},\n");
      out.write("                beforeSend: function () {\n");
      out.write("//                    //lAM GI DE KHONG CHO DUPLEX\n");
      out.write("                },\n");
      out.write("                success: function (response) {\n");
      out.write("//                    console.log(response);\n");
      out.write("                    $(\"#cpGame\").html(response).trigger(\"change\");\n");
      out.write("                },\n");
      out.write("                error: function (jqXHR, textStatus, errorThrown) {\n");
      out.write("                    console.log(textStatus, errorThrown);\n");
      out.write("                }\n");
      out.write("            });\n");
      out.write("        }\n");
      out.write("    });\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
